{
  "openapi": "3.0.1",
  "info": {
    "title": "Araneo API",
    "description": "Araneo REST API",
    "license": {
      "name": "Proprietary"
    },
    "version": "v-1"
  },
  "servers": [{
    "url": "https://develop-api.mna-dev.scan-track.eu",
    "description": "Generated server url"
  }],
  "security": [{
    "bearer": []
  }],
  "tags": [{
    "name": "Actuator",
    "description": "Monitor and interact",
    "externalDocs": {
      "description": "Spring Boot Actuator Web API Documentation",
      "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
    }
  }],
  "paths": {
    "/async-api/resendcountersrequest": {
      "get": {
        "tags": ["async-api"],
        "summary": "Fake api to provide model for async clients",
        "operationId": "AsyncApi_resendcountersrequest",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendCountersRequest"
                }
              }
            }
          }
        }
      }
    },
    "/async-api/resenddetailscountersrequest": {
      "get": {
        "tags": ["async-api"],
        "summary": "Fake api to provide model for async clients",
        "operationId": "AsyncApi_resenddetailscountersrequest",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendDetailsCountersRequest"
                }
              }
            }
          }
        }
      }
    },
    "/async-api/logisticsprocesscreated": {
      "get": {
        "tags": ["async-api"],
        "summary": "Fake api to provide model for async clients",
        "operationId": "AsyncApi_logisticsprocesscreated",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogisticsProcessCreated"
                }
              }
            }
          }
        }
      }
    },
    "/async-api/logisticsprocessstatechanged": {
      "get": {
        "tags": ["async-api"],
        "summary": "Fake api to provide model for async clients",
        "operationId": "AsyncApi_logisticsprocessstatechanged",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogisticsProcessStateChanged"
                }
              }
            }
          }
        }
      }
    },
    "/async-api/logisticsshipmentcontentupdated": {
      "get": {
        "tags": ["async-api"],
        "summary": "Fake api to provide model for async clients",
        "operationId": "AsyncApi_logisticsshipmentcontentupdated",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogisticsShipmentContentUpdated"
                }
              }
            }
          }
        }
      }
    },
    "/async-api/alarmupdatedto": {
      "get": {
        "tags": ["async-api"],
        "summary": "Fake api to provide model for async clients",
        "operationId": "AsyncApi_alarmupdatedto",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmUpdateDto"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things": {
      "put": {
        "tags": ["things-controller"],
        "summary": "Update existing things which match the specified filters or create new if they do not exist",
        "operationId": "Things_deprecatedUpsertThings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OldUpdateThingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchThingsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": ["things-controller"],
        "summary": "Create a new thing",
        "operationId": "Things_createThing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThingRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["things-controller"],
        "summary": "Delete existing things which match the specified filters",
        "operationId": "Things_deprecatedDeleteThings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchThingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "patch": {
        "tags": ["things-controller"],
        "summary": "Update existing things which match the specified filters",
        "operationId": "Things_deprecatedUpdateThings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OldUpdateThingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchThingsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/things/v2": {
      "put": {
        "tags": ["things-controller"],
        "summary": "Update existing thing which matches the specified filters or create new if it does not exist.Return a number of modified things.",
        "operationId": "Things_upsertThings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateThingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["things-controller"],
        "summary": "Delete existing things which match the specified filters. Returns number of deleted things.",
        "operationId": "Things_deleteThings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThingsQueryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["things-controller"],
        "summary": "Update existing things which match the specified filters.Return a number of modified things.",
        "operationId": "Things_updateThings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateThingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/batch": {
      "put": {
        "tags": ["things-controller"],
        "summary": "Update existing things which match the specified filters or create new if they do not exist in a batch",
        "operationId": "Things_deprecatedUpsertThingsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OldUpdateThingRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchThingsResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "patch": {
        "tags": ["things-controller"],
        "summary": "Update existing things which match the specified filters in batch",
        "operationId": "Things_deprecatedUpdateThingsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OldUpdateThingRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchThingsResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/things/batch/v2": {
      "put": {
        "tags": ["things-controller"],
        "summary": "Update existing things (thing per batch) which match the specified filters (must include all primary keys if they exist) or create new if it does not exist in a batch. Returns an array of numbers of modified things for each request.",
        "operationId": "Things_upsertThingsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateThingsRequestDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["things-controller"],
        "summary": "Update existing things which match the specified filters in batch. Returns an array of numbers of modified things for each request.",
        "operationId": "Things_updateThingsBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateThingsRequestDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/v2/settings": {
      "put": {
        "tags": ["scope-settings-controller-v-2"],
        "summary": "Update scope setting",
        "operationId": "ScopeSettingsV2_updateScopeSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScopeSettingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["scope-settings-controller-v-2"],
        "summary": "Create new scope settings",
        "operationId": "ScopeSettingsV2_createScopeSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScopeSettingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/settings/{scopeId}": {
      "get": {
        "tags": ["scope-settings-controller"],
        "summary": "Get scope settings by id",
        "operationId": "ScopeSettings_getScopeSettings1",
        "parameters": [{
          "name": "scopeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedScopeSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": ["scope-settings-controller"],
        "summary": "Update scope settings",
        "operationId": "ScopeSettings_updateScopeSettings",
        "parameters": [{
          "name": "scopeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedScopeSettingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedScopeSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports": {
      "put": {
        "tags": ["reports-controller"],
        "summary": "Save report",
        "operationId": "Reports_save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedSaveTableReportRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedReportDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/v2/table-reports": {
      "put": {
        "tags": ["reports-controller-v-2"],
        "summary": "Save table report",
        "operationId": "ReportsV2_saveTableReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveTableReportRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableReportDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/v2/map-reports": {
      "put": {
        "tags": ["reports-controller-v-2"],
        "summary": "Save map report",
        "operationId": "ReportsV2_saveMapReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveMapReportRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapReportDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/table-reports": {
      "put": {
        "tags": ["reports-controller"],
        "summary": "Save table report",
        "operationId": "Reports_saveTableReport1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedSaveTableReportRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedTableReportDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/map-reports": {
      "put": {
        "tags": ["reports-controller"],
        "summary": "Save map report",
        "operationId": "Reports_saveMapReport1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedSaveMapReportRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedMapReportDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/": {
      "put": {
        "tags": ["reports-controller"],
        "summary": "Save report",
        "operationId": "Reports_createOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedSaveTableReportRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedReportDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/refilling/settings": {
      "put": {
        "tags": ["refilling-controller"],
        "summary": "Save refilling settings",
        "operationId": "Refilling_createRefillingSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefillingSettingsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefillingSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["refilling-controller"],
        "summary": "Create refilling settings",
        "operationId": "Refilling_createRefillingSettings1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefillingSettingsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefillingSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/refilling/dashboard/settings": {
      "get": {
        "tags": ["refilling-controller"],
        "operationId": "Refilling_getRefillingDashboardSettings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefillingDashboardSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["refilling-controller"],
        "operationId": "Refilling_saveRefillingDashboardSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefillingDashboardSettingsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefillingDashboardSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/mobile/handheld/settings/v2": {
      "get": {
        "tags": ["mobile-settings-controller"],
        "summary": "Get settings for the handheld app",
        "operationId": "MobileSettings_getHandheldAppSettings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HandheldAppSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["mobile-settings-controller"],
        "summary": "Put settings for the handheld app",
        "operationId": "MobileSettings_setHandheldAppSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetHandheldAppSettingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HandheldAppSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/logistics/shipments/units": {
      "put": {
        "tags": ["logistics-unit-controller"],
        "summary": "Update shipment unit or create new one if it does not exist",
        "operationId": "LogisticsUnit_registerShipmentUnit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentUnitDetailsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentUnitDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/logistics/processes/{processId}/units": {
      "put": {
        "tags": ["logistics-process-controller"],
        "summary": "Offers specified unit for logistics process",
        "operationId": "LogisticsProcess_offerShipmentUnitToProcess",
        "parameters": [{
          "name": "processId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentUnitReferenceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogisticsProcessDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["logistics-process-controller"],
        "summary": "Removes previously offered unit from logistics process",
        "operationId": "LogisticsProcess_removeShipmentUnitFromProcess",
        "parameters": [{
          "name": "processId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentUnitReferenceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentUnitDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/view/rules/{id}": {
      "get": {
        "tags": ["locations-navigation-view-rules-controller"],
        "operationId": "LocationsNavigationViewRules_getRule",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewRuleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["locations-navigation-view-rules-controller"],
        "operationId": "LocationsNavigationViewRules_updateRule",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationViewRuleParametersDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewRuleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["locations-navigation-view-rules-controller"],
        "operationId": "LocationsNavigationViewRules_deleteRule",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/settings/search/used-additional-attributes": {
      "get": {
        "tags": ["locations-navigation-controller"],
        "operationId": "LocationsNavigation_getAdditionalAttributesUsedForSearch",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["locations-navigation-controller"],
        "operationId": "LocationsNavigation_setAdditionalAttributesUsedForSearch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/groupings/{id}": {
      "get": {
        "tags": ["locations-navigation-grouping-controller"],
        "operationId": "LocationsNavigationGrouping_getGrouping",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGroupingDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["locations-navigation-grouping-controller"],
        "operationId": "LocationsNavigationGrouping_updateGrouping",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationGroupingParametersDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGroupingDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["locations-navigation-grouping-controller"],
        "operationId": "LocationsNavigationGrouping_deleteGrouping",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/auth/permissions": {
      "get": {
        "tags": ["permission-controller"],
        "summary": "get permissionAuthority by principalType and principalId",
        "operationId": "Permission_getPermission",
        "parameters": [{
          "name": "principalType",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["ROLE", "USER"]
          }
        }, {
          "name": "principalId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionAuthorityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["permission-controller"],
        "summary": "save permission for role or user",
        "operationId": "Permission_savePermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionAuthorityDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionAuthorityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/assets": {
      "put": {
        "tags": ["assets-controller"],
        "summary": "Update attributes for specified assets. If asset not created yet they will be created from corresponding article. Returns list of updated assets. ",
        "operationId": "Assets_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/assets/products/settings": {
      "put": {
        "tags": ["assets-controller"],
        "operationId": "Assets_saveProductSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSettingsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/articles": {
      "get": {
        "tags": ["articles-controller"],
        "summary": "Get articles by EANs",
        "operationId": "Articles_getArticlesByEans",
        "parameters": [{
          "name": "eans",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArticleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["articles-controller"],
        "summary": "Save article",
        "operationId": "Articles_saveArticle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/alarms/settings": {
      "get": {
        "tags": ["alarms-controller"],
        "operationId": "Alarms_getSettings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["alarms-controller"],
        "operationId": "Alarms_saveSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmSettingsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/types": {
      "get": {
        "tags": ["thing-types-controller"],
        "summary": "Get all thing types",
        "operationId": "ThingTypes_getAllThingTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThingTypeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["thing-types-controller"],
        "summary": "Create a thing type",
        "operationId": "ThingTypes_create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThingTypeRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/types/{id}/updateIndexes": {
      "post": {
        "tags": ["thing-types-controller"],
        "summary": "Update existing thing type indexes. Might change. Not allowed for public usage",
        "operationId": "ThingTypes_updateIndexes",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/search": {
      "post": {
        "tags": ["things-controller"],
        "summary": "Search for things which match the specified filters",
        "operationId": "Things_search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchThingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchThingsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts": {
      "get": {
        "tags": ["stock-counts-controller"],
        "summary": "Find stock counts with specific status for location",
        "operationId": "StockCounts_findByStatusAndLocation",
        "parameters": [{
          "name": "status",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["ACTIVE", "CLOSING", "CLOSED_PROCESSING", "CLOSED", "CANCELLED"]
          }
        }, {
          "name": "locationId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockCountDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["stock-counts-controller"],
        "summary": "Create a new stock count",
        "operationId": "StockCounts_create1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedCreateStockCountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-counts/v2": {
      "post": {
        "tags": ["stock-counts-controller"],
        "summary": "New create a new stock count",
        "operationId": "StockCounts_createV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockCountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/results/search": {
      "post": {
        "tags": ["stock-counts-controller"],
        "summary": "Get all stock counts results for specified locations and zones",
        "operationId": "StockCounts_searchResultsForZones",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchStockCountsResultsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchStockCountsResultsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/": {
      "post": {
        "tags": ["stock-counts-controller"],
        "summary": "Deprecated. Create a new stock count",
        "operationId": "StockCounts_createOld",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedCreateStockCountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-count/sessions/{stockCountId}/{sessionId}/events": {
      "post": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Pushes stock count events",
        "operationId": "StockCountSessions_pushEvents",
        "parameters": [{
          "name": "stockCountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "sessionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushEventsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-count/sessions/v2": {
      "post": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Create new stock count session",
        "operationId": "StockCountSessions_createV21",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockCountSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-count/sessions/": {
      "post": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Deprecated. Create new stock count session",
        "operationId": "StockCountSessions_createOld1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedCreateStockCountSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-count/sessions": {
      "get": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Find stock count sessions matching specified parameters",
        "operationId": "StockCountSessions_find",
        "parameters": [{
          "name": "status",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["ACTIVE", "CLOSED", "CANCELLED"]
          }
        }, {
          "name": "stockCountId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "forCurrentUser",
          "in": "query",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }, {
          "name": "deviceId",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockCountSessionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Create new stock count session",
        "operationId": "StockCountSessions_create2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedCreateStockCountSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/settings": {
      "post": {
        "tags": ["scope-settings-controller"],
        "summary": "Create new scope settings",
        "operationId": "ScopeSettings_createScopeSettings1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedCreateScopeSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedScopeSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/settings/v2": {
      "post": {
        "tags": ["scope-settings-controller"],
        "summary": "Create new scope settings",
        "operationId": "ScopeSettings_createScopeSettingsV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedScopeSettingsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedScopeSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/settings/search": {
      "post": {
        "tags": ["scope-settings-controller"],
        "summary": "Search available scopes settings with paging",
        "operationId": "ScopeSettings_searchAvailableSettingsWithPager",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchScopeSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedSearchScopeSettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/{reportId}/results": {
      "post": {
        "tags": ["reports-controller"],
        "summary": "Run table report and get results",
        "operationId": "Reports_runTableReportOld",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedTableReportResultsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedTableReportResultsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/{reportId}/results/csv": {
      "post": {
        "tags": ["reports-controller"],
        "summary": "Run table report and get results as CSV",
        "operationId": "Reports_runTableReportAndReturnCSVOld",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedTableReportResultsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/{reportId}/filters/possible-values": {
      "post": {
        "tags": ["reports-controller"],
        "summary": "List possible values for report filters. It traverses the report result and returns some first value. If forceReturnAll is true, it returns all the possible values",
        "description": "Run report by id with custom filter settings and get unique values for specific filters",
        "operationId": "Reports_listPossibleFilterValuesOld",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedListFiltersValuesRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportFiltersValuesDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/table-reports/{reportId}/results": {
      "post": {
        "tags": ["reports-controller"],
        "summary": "Run table report and get results",
        "operationId": "Reports_runTableReport",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedTableReportResultsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedTableReportResultsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/table-reports/{reportId}/results/csv": {
      "post": {
        "tags": ["reports-controller"],
        "summary": "Run table report and get results as CSV",
        "operationId": "Reports_runTableReportAndReturnCSV",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedTableReportResultsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/search": {
      "post": {
        "tags": ["reports-controller"],
        "summary": "Search for reports",
        "operationId": "Reports_searchReports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsSearchRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedReportsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/map-reports/{reportId}/results": {
      "post": {
        "tags": ["reports-controller"],
        "summary": "Run map report and get results",
        "operationId": "Reports_runMapReport",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedMapReportResultsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedMapReportResultsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/refilling/tasks": {
      "get": {
        "tags": ["refilling-controller"],
        "operationId": "Refilling_deprecatedGetActiveTasksForZones",
        "parameters": [{
          "name": "zoneIds",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeprecatedRefillingTaskDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": ["refilling-controller"],
        "operationId": "Refilling_deprecatedCreateTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeprecatedCreateRefillingTaskDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedRefillingTaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/refilling/tasks/v2": {
      "post": {
        "tags": ["refilling-controller"],
        "summary": "Create a refilling task",
        "operationId": "Refilling_createTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefillingTaskDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefillingTaskDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/refilling/processes/reload": {
      "post": {
        "tags": ["refilling-controller"],
        "summary": "Actualize refilling processes",
        "operationId": "Refilling_reload",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations": {
      "get": {
        "tags": ["locations-controller"],
        "summary": "Get all user locations. Result is a tree structure",
        "operationId": "Locations_getAllUserLocations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDtoDeprecated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": ["locations-controller"],
        "summary": "Create new location",
        "operationId": "Locations_addLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDtoDeprecated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/locations/zones": {
      "post": {
        "tags": ["locations-controller"],
        "summary": "Create new zone",
        "operationId": "Locations_createZone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateZoneDtoDeprecated"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneDtoDeprecated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/locations/zones/{zoneId}/map": {
      "get": {
        "tags": ["locations-controller"],
        "summary": "Get authorized map url if present or return 404",
        "operationId": "Locations_getMapUrlForZone",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": ["locations-controller"],
        "summary": "Upload zone map image for a zone",
        "operationId": "Locations_uploadMapForZone",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["mapFile"],
                "type": "object",
                "properties": {
                  "mapFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/locations/v2": {
      "get": {
        "tags": ["locations-controller-v-2"],
        "summary": "Get all user locations. Result is a tree structure",
        "operationId": "LocationsV2_getAllUserLocations1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["locations-controller-v-2"],
        "summary": "Create new location",
        "operationId": "LocationsV2_addLocation1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/v2/zones": {
      "post": {
        "tags": ["locations-controller-v-2"],
        "summary": "Create new zone",
        "operationId": "LocationsV2_createZone1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateZoneDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/v2/zones/{zoneId}/map": {
      "get": {
        "tags": ["locations-controller-v-2"],
        "summary": "Get authorized map url if present or return 404",
        "operationId": "LocationsV2_getMapUrlForZone1",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["locations-controller-v-2"],
        "summary": "Upload zone map image for a zone",
        "operationId": "LocationsV2_uploadMapForZone1",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["mapFile"],
                "type": "object",
                "properties": {
                  "mapFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/view/rules": {
      "get": {
        "tags": ["locations-navigation-view-rules-controller"],
        "operationId": "LocationsNavigationViewRules_getAllRules",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationViewRuleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["locations-navigation-view-rules-controller"],
        "operationId": "LocationsNavigationViewRules_createRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationViewRuleParametersDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationViewRuleDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/groupings": {
      "get": {
        "tags": ["locations-navigation-grouping-controller"],
        "operationId": "LocationsNavigationGrouping_getAllGroupings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationGroupingDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["locations-navigation-grouping-controller"],
        "operationId": "LocationsNavigationGrouping_createGrouping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationGroupingParametersDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationGroupingDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/auth/tokens": {
      "get": {
        "tags": ["token-controller"],
        "operationId": "Token_getAllTokens",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["token-controller"],
        "operationId": "Token_createToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/assets/products/search": {
      "post": {
        "tags": ["assets-controller"],
        "summary": "Search for products which match the specified filters",
        "operationId": "Assets_search1",
        "parameters": [{
          "name": "User-Agent",
          "in": "header",
          "required": false,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProductRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAvailabilityDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/assets/": {
      "post": {
        "tags": ["assets-controller"],
        "summary": "Deprecated, use put method instead. Update attributes for specified assets. If asset not created yet they will be created from corresponding article",
        "operationId": "Assets_updateOld",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetsRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/alarms": {
      "get": {
        "tags": ["alarms-controller"],
        "operationId": "Alarms_findAlarms",
        "parameters": [{
          "name": "zoneIds",
          "in": "query",
          "required": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }, {
          "name": "statuses",
          "in": "query",
          "required": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["OPEN", "ACKNOWLEDGED", "IGNORED"]
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlarmDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["alarms-controller"],
        "operationId": "Alarms_createAlarm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlarmDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/types/{id}": {
      "get": {
        "tags": ["thing-types-controller"],
        "summary": "Get existing thing type by id",
        "operationId": "ThingTypes_getById",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["thing-types-controller"],
        "summary": "Delete existing thing type",
        "operationId": "ThingTypes_delete",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["thing-types-controller"],
        "summary": "Update existing thing type",
        "operationId": "ThingTypes_update1",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateThingTypeRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/{stockCountId}": {
      "get": {
        "tags": ["stock-counts-controller"],
        "summary": "Get stock count by ID",
        "operationId": "StockCounts_getById1",
        "parameters": [{
          "name": "stockCountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["stock-counts-controller"],
        "summary": "Update stock count. You can change only its status and only to CANCELLED or CLOSED. Transition from CANCELLED or CLOSED is not allowed",
        "operationId": "StockCounts_update2",
        "parameters": [{
          "name": "stockCountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStockCountRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/{stockCountId}/close": {
      "patch": {
        "tags": ["stock-counts-controller"],
        "summary": "Deprecated. Use update",
        "operationId": "StockCounts_close",
        "parameters": [{
          "name": "stockCountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-counts/{stockCountId}/cancel": {
      "patch": {
        "tags": ["stock-counts-controller"],
        "summary": "Deprecated. Use update",
        "operationId": "StockCounts_cancel",
        "parameters": [{
          "name": "stockCountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-count/sessions/{sessionId}": {
      "patch": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Update session. You can change only its status and only to CANCELLED or CLOSED. Transition from CANCELLED or CLOSED is not allowed",
        "operationId": "StockCountSessions_update3",
        "parameters": [{
          "name": "sessionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStockCountSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-count/sessions/close": {
      "patch": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Deprecated. Use update",
        "operationId": "StockCountSessions_close1",
        "parameters": [{
          "name": "id",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-count/sessions/cancel": {
      "patch": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Deprecated. Use update",
        "operationId": "StockCountSessions_cancel1",
        "parameters": [{
          "name": "id",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/refilling/tasks/{taskId}": {
      "patch": {
        "tags": ["refilling-controller"],
        "summary": "Change state of existing task. Pick it, cancel or mark as not found",
        "operationId": "Refilling_changeTaskState",
        "parameters": [{
          "name": "taskId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTaskStateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/logistics/processes/{processId}": {
      "get": {
        "tags": ["logistics-process-controller"],
        "summary": "Logistics processes by id",
        "operationId": "LogisticsProcess_getProcesses",
        "parameters": [{
          "name": "processId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogisticsProcessDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["logistics-process-controller"],
        "summary": "Update logistics process state",
        "operationId": "LogisticsProcess_updateProcess",
        "parameters": [{
          "name": "processId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProcessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessUpdateResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/logistics/processes/bulk-update": {
      "patch": {
        "tags": ["logistics-process-controller"],
        "summary": "Update active logistics processes matching given criteria",
        "operationId": "LogisticsProcess_updateProcesses",
        "parameters": [{
          "name": "destinationReference",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "businessStep",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["RECEIVING", "SHIPPING"]
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProcessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessUpdateResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/zones/{zoneId}": {
      "delete": {
        "tags": ["locations-controller"],
        "summary": "Delete zone by id",
        "operationId": "Locations_deleteZoneById",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "patch": {
        "tags": ["locations-controller"],
        "summary": "Update zone",
        "operationId": "Locations_updateZone",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateZoneDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneDtoDeprecated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/locations/v2/{locationId}": {
      "delete": {
        "tags": ["locations-controller-v-2"],
        "summary": "Delete location",
        "operationId": "LocationsV2_deleteLocation1",
        "parameters": [{
          "name": "locationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["locations-controller-v-2"],
        "summary": "Add additionalAttributes for location",
        "operationId": "LocationsV2_updateLocation",
        "parameters": [{
          "name": "locationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/v2/zones/{zoneId}": {
      "delete": {
        "tags": ["locations-controller-v-2"],
        "summary": "Delete zone by id",
        "operationId": "LocationsV2_deleteZoneById1",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["locations-controller-v-2"],
        "summary": "Update zone",
        "operationId": "LocationsV2_updateZone1",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateZoneDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/alarms/{alarmId}": {
      "patch": {
        "tags": ["alarms-controller"],
        "operationId": "Alarms_updateAlarmStatus",
        "parameters": [{
          "name": "alarmId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlarmStatusDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/sys/info": {
      "get": {
        "tags": ["Actuator"],
        "summary": "Actuator web endpoint 'info'",
        "operationId": "Actuator_info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/types/": {
      "get": {
        "tags": ["thing-types-controller"],
        "summary": "Deprecated. Get all thing types",
        "operationId": "ThingTypes_getAllThingTypesOld",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThingTypeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/things/types/usages": {
      "get": {
        "tags": ["thing-types-usage-controller"],
        "summary": "Get usage info of thing types",
        "operationId": "ThingTypesUsage_thingTypesUsages",
        "parameters": [{
          "name": "ids",
          "in": "query",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UsageDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/types/usages/{thingTypeId}/attributes": {
      "get": {
        "tags": ["thing-types-usage-controller"],
        "summary": "Get attributes usage of thing type",
        "operationId": "ThingTypesUsage_thingTypeAttributesUsages",
        "parameters": [{
          "name": "thingTypeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UsageDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/types/name/{name}": {
      "get": {
        "tags": ["thing-types-controller"],
        "summary": "Get existing thing type by name",
        "operationId": "ThingTypes_getByName",
        "parameters": [{
          "name": "name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThingTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/types/attributes/types": {
      "get": {
        "tags": ["thing-types-controller"],
        "summary": "Get all attributes types",
        "operationId": "ThingTypes_allAttributeTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeTypeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/things/attributes/values/distinct": {
      "get": {
        "tags": ["things-controller"],
        "summary": "Deprecated. Use getDistinctAttributesValues",
        "operationId": "Things_findDistinctAttributesValuesOld",
        "parameters": [{
          "name": "thingTypeId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }, {
          "name": "attributesNames",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedDistinctAttributesValuesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/things/attributes/distinct-values": {
      "get": {
        "tags": ["things-controller"],
        "operationId": "Things_deprecatedGetDistinctAttributesValues",
        "parameters": [{
          "name": "thingTypeId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }, {
          "name": "attributesNames",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedDistinctAttributesValuesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/things/attributes/distinct-values/v2": {
      "get": {
        "tags": ["things-controller"],
        "summary": "Get distinct attributes values",
        "operationId": "Things_getDistinctAttributesValues",
        "parameters": [{
          "name": "thingTypeId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }, {
          "name": "attributesNames",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DistinctAttributesValuesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/{stockCountId}/results/events-by-zones": {
      "get": {
        "tags": ["stock-counts-controller"],
        "summary": "Get stock count events grouped by zones",
        "operationId": "StockCounts_getResultsReadsByZone",
        "parameters": [{
          "name": "stockCountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockCountEventsByZoneDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/{stockCountId}/results/details": {
      "get": {
        "tags": ["stock-counts-controller"],
        "summary": "Get stock count results details",
        "operationId": "StockCounts_getResultsDetails",
        "parameters": [{
          "name": "stockCountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountResultsDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/results": {
      "get": {
        "tags": ["stock-counts-controller"],
        "summary": "Export stock count results",
        "operationId": "StockCounts_exportResults",
        "parameters": [{
          "name": "stockCountIds",
          "in": "query",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-counts/active": {
      "get": {
        "tags": ["stock-counts-controller"],
        "summary": "Deprecated. Use findByStatusAndLocation",
        "operationId": "StockCounts_getActiveForLocationOld",
        "parameters": [{
          "name": "locationId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockCountDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-count/sessions/{sessionId}/events/identifiers": {
      "get": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Get identifiers of all scan events in session",
        "operationId": "StockCountSessions_getScannedEventsIdentifiersForSession",
        "parameters": [{
          "name": "sessionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/stock-count/sessions/{sessionId}/counters": {
      "get": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Deprecated. Use websocket API",
        "operationId": "StockCountSessions_getActualCounters",
        "parameters": [{
          "name": "sessionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionCounters"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-count/sessions/activeCount": {
      "get": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Deprecated. Use find",
        "operationId": "StockCountSessions_getActiveSessionsCountForStockCount",
        "parameters": [{
          "name": "stockCountId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionsCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/stock-count/sessions/active": {
      "get": {
        "tags": ["stock-count-sessions-controller"],
        "summary": "Deprecated. Use find",
        "operationId": "StockCountSessions_findActive",
        "parameters": [{
          "name": "deviceId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "stockCountId",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockCountSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/{scopeId}": {
      "get": {
        "tags": ["scopes-controller"],
        "summary": "Get scope by id",
        "operationId": "Scopes_getScopeById",
        "parameters": [{
          "name": "scopeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedScopeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/{scopeId}/data": {
      "get": {
        "tags": ["scopes-controller"],
        "summary": "Get scope data",
        "operationId": "Scopes_getScopeDataById",
        "parameters": [{
          "name": "scopeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeDataDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/v2/{scopeId}": {
      "get": {
        "tags": ["scopes-controller-v-2"],
        "summary": "Get scope by id",
        "operationId": "ScopesV2_getScopeById1",
        "parameters": [{
          "name": "scopeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/v2/settings/{scopeId}": {
      "get": {
        "tags": ["scope-settings-controller-v-2"],
        "summary": "Get scope settings by id",
        "operationId": "ScopeSettingsV2_getScopeSettings",
        "parameters": [{
          "name": "scopeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["scope-settings-controller-v-2"],
        "summary": "Delete scope settings by id",
        "operationId": "ScopeSettingsV2_deleteScopeSettings",
        "parameters": [{
          "name": "scopeId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/v2/settings/sources": {
      "get": {
        "tags": ["scope-settings-controller-v-2"],
        "summary": "Get sources to create scope settings",
        "operationId": "ScopeSettingsV2_getAvailableSources",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScopeSourceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/v2/settings/search": {
      "get": {
        "tags": ["scope-settings-controller-v-2"],
        "summary": "Search available scopes settings with paging",
        "operationId": "ScopeSettingsV2_searchAvailableSettingsWithPager1",
        "parameters": [{
          "name": "request",
          "in": "query",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SearchScopeSettingsRequest"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchScopeSettingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/v2/definitions": {
      "get": {
        "tags": ["scopes-controller-v-2"],
        "summary": "Get available scopes definitions",
        "operationId": "ScopesV2_getDefinitions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScopeDefinitionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/v2/definitions/{scopeDefinitionId}": {
      "get": {
        "tags": ["scopes-controller-v-2"],
        "summary": "Get scope definition by id",
        "operationId": "ScopesV2_getScopeDefinitionById",
        "parameters": [{
          "name": "scopeDefinitionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopeDefinitionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/settings/sources": {
      "get": {
        "tags": ["scope-settings-controller"],
        "summary": "Get sources to create scope settings",
        "operationId": "ScopeSettings_getAvailableSources1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScopeSourceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/definitions": {
      "get": {
        "tags": ["scopes-controller"],
        "summary": "Get available scopes definitions",
        "operationId": "Scopes_getDefinitions1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeprecatedScopeDefinitionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/definitions/{scopeDefinitionId}": {
      "get": {
        "tags": ["scopes-controller"],
        "summary": "Get scope definition by id",
        "operationId": "Scopes_getScopeDefinitionById1",
        "parameters": [{
          "name": "scopeDefinitionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedScopeDefinitionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/scopes/definitions/": {
      "get": {
        "tags": ["scopes-controller"],
        "summary": "Deprecated. Use getDefinitions",
        "operationId": "Scopes_getDefinitionsOld",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeprecatedScopeDefinitionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/{reportId}": {
      "get": {
        "tags": ["reports-controller"],
        "summary": "Get report by id",
        "operationId": "Reports_getById2",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [{
                    "$ref": "#/components/schemas/DeprecatedTableReportDto"
                  }, {
                    "$ref": "#/components/schemas/DeprecatedMapReportDto"
                  }]
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": ["reports-controller"],
        "summary": "Delete report",
        "operationId": "Reports_deleteReport",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/reports/v2": {
      "get": {
        "tags": ["reports-controller-v-2"],
        "summary": "Search for reports",
        "operationId": "ReportsV2_searchReports1",
        "parameters": [{
          "name": "request",
          "in": "query",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportsSearchRequestDto"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/v2/{reportId}": {
      "get": {
        "tags": ["reports-controller-v-2"],
        "summary": "Get report by id",
        "operationId": "ReportsV2_getById3",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["reports-controller-v-2"],
        "summary": "Delete report",
        "operationId": "ReportsV2_deleteReport1",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/v2/{reportId}/filters/possible-values": {
      "get": {
        "tags": ["reports-controller-v-2"],
        "summary": "List possible values for report filters. It traverses the report result and returns some first value. If forceReturnAll is true, it returns all the possible values",
        "description": "Run report by id with custom filter settings and get unique values for specific filters",
        "operationId": "ReportsV2_listPossibleFilterValues",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "request",
          "in": "query",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ListFiltersValuesRequestDto"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportFiltersValuesDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/v2/table-reports/{reportId}/results": {
      "get": {
        "tags": ["reports-controller-v-2"],
        "summary": "Run table report and get results",
        "operationId": "ReportsV2_runTableReport1",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "request",
          "in": "query",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableReportResultsRequestDto"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableReportResultsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/v2/table-reports/{reportId}/results/csv": {
      "get": {
        "tags": ["reports-controller-v-2"],
        "summary": "Run table report and get results as CSV",
        "operationId": "ReportsV2_runTableReportAndReturnCSV1",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "request",
          "in": "query",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableReportResultsRequestDto"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/reports/v2/map-reports/{reportId}/results": {
      "get": {
        "tags": ["reports-controller-v-2"],
        "summary": "Run map report and get results",
        "operationId": "ReportsV2_runMapReport1",
        "parameters": [{
          "name": "reportId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "request",
          "in": "query",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapReportResultsRequestDto"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapReportResultsResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/refilling/zones/{zoneId}/settings": {
      "get": {
        "tags": ["refilling-controller"],
        "summary": "Get refilling settings for zone. The zone should be a backStorageZone, salesFloorZone or offsiteStorageZone",
        "operationId": "Refilling_getRefillingSettings",
        "parameters": [{
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefillingSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/refilling/tasks/active-tasks": {
      "get": {
        "tags": ["refilling-controller"],
        "summary": "Get all active tasks for zones",
        "operationId": "Refilling_getActiveTasksForZones",
        "parameters": [{
          "name": "zoneIds",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefillingTaskDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/refilling/settings/location/{locationId}/zones/{zoneId}": {
      "get": {
        "tags": ["refilling-controller"],
        "summary": "Get refilling settings for zone",
        "operationId": "Refilling_deprecatedGetRefillingSettings",
        "parameters": [{
          "name": "locationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }, {
          "name": "zoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedRefillingSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/refilling/settings/location/{locationId}/zones/{sourceZoneId}/targetZoneIds": {
      "get": {
        "tags": ["refilling-controller"],
        "summary": "Get target zone IDs for the source zone ID",
        "operationId": "Refilling_getTargetZonesForSource",
        "parameters": [{
          "name": "locationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }, {
          "name": "sourceZoneId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/refilling/product/requirements/count-by-type": {
      "get": {
        "tags": ["refilling-controller"],
        "operationId": "Refilling_getProductRequirementsCountByType",
        "parameters": [{
          "name": "from",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        }, {
          "name": "to",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        }, {
          "name": "locationIds",
          "in": "query",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationIdDto"
            }
          }
        }, {
          "name": "productAttributesValues",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAttributesValuesDto"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRequirementsCountDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/products/attributes/distinct-values": {
      "get": {
        "tags": ["products-controller"],
        "operationId": "Products_getDistinctProductAttributeValues",
        "parameters": [{
          "name": "attributeNames",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributesValuesDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/mobile/settings/": {
      "get": {
        "tags": ["mobile-settings-controller"],
        "summary": "Deprecated. Use getHandheldAppSettings",
        "operationId": "MobileSettings_getHandheldAppSettingsOld",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedHandheldAppSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/mobile/handheld/settings": {
      "get": {
        "tags": ["mobile-settings-controller"],
        "summary": "Deprecated get settings for the handheld app",
        "operationId": "MobileSettings_deprecatedGetHandheldAppSettings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeprecatedHandheldAppSettingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/logistics/reports/units/{unitType}/{unitId}": {
      "get": {
        "tags": ["logistics-report-controller"],
        "summary": "Retrieves particular shipment unit (default search fallback: aggregation by sourceReferenceId)",
        "operationId": "LogisticsReport_getShipmentUnit",
        "parameters": [{
          "name": "unitType",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          }
        }, {
          "name": "unitId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "unitState",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["IN_TRANSIT", "ALLOCATED", "PROCESSED", "PROCESSED_NOT_CONFIRMED"]
          }
        }, {
          "name": "businessStep",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["RECEIVING", "SHIPPING"]
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportShipmentUnitDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/logistics/reports/location-overview/{locationReferenceId}/units/{unitType}": {
      "get": {
        "tags": ["logistics-report-controller"],
        "summary": "Retrieves list of shipment units matching given criteria",
        "operationId": "LogisticsReport_listShipmentUnitReferences",
        "parameters": [{
          "name": "locationReferenceId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "unitType",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          }
        }, {
          "name": "referenceType",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["SOURCE", "DESTINATION"]
          }
        }, {
          "name": "businessStep",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["RECEIVING", "SHIPPING"]
          }
        }, {
          "name": "unitState",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "enum": ["IN_TRANSIT", "ALLOCATED", "PROCESSED", "PROCESSED_NOT_CONFIRMED"]
          }
        }, {
          "name": "updatedSince",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportShipmentUnitReferenceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/logistics/processes": {
      "get": {
        "tags": ["logistics-process-controller"],
        "summary": "Lists active logistics processes or create new process matching given criteria",
        "operationId": "LogisticsProcess_listProcesses",
        "parameters": [{
          "name": "destinationReference",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "businessStep",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["RECEIVING", "SHIPPING"]
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogisticProcessHandleDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/logistics/processes/{processId}/validate": {
      "get": {
        "tags": ["logistics-process-controller"],
        "summary": "Validate logistics process",
        "operationId": "LogisticsProcess_validateLogisticsProcess",
        "parameters": [{
          "name": "processId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogisticsProcessDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/{id}": {
      "get": {
        "tags": ["locations-controller"],
        "summary": "Get location by id",
        "operationId": "Locations_getLocationById",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDtoDeprecated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/locations/zones/{id}": {
      "get": {
        "tags": ["locations-controller"],
        "summary": "Get zone by id",
        "operationId": "Locations_getZoneById",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneDtoDeprecated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/locations/v2/{id}": {
      "get": {
        "tags": ["locations-controller-v-2"],
        "summary": "Get location by id",
        "operationId": "LocationsV2_getLocationById1",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/v2/zones/{id}": {
      "get": {
        "tags": ["locations-controller-v-2"],
        "summary": "Get zone by id",
        "operationId": "LocationsV2_getZoneById1",
        "parameters": [{
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/v2/zones/next-id": {
      "get": {
        "tags": ["locations-controller-v-2"],
        "summary": "Get next Id for zone",
        "operationId": "LocationsV2_getNextIdForZone",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/v2/next-id": {
      "get": {
        "tags": ["locations-controller-v-2"],
        "summary": "Get next Id for location",
        "operationId": "LocationsV2_getNextIdForLocation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/v2/navigation": {
      "get": {
        "tags": ["locations-controller-v-2"],
        "summary": "Get all user locations. Result is a tree structure",
        "operationId": "LocationsV2_getSelection",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/selected-paths": {
      "get": {
        "tags": ["locations-navigation-controller"],
        "operationId": "LocationsNavigation_getSelectedPathsAfterDeselection",
        "parameters": [{
          "name": "selectedPaths",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/NavigationPathsDto"
          }
        }, {
          "name": "deselectedPath",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/NavigationPathDto"
          }
        }, {
          "name": "navigationContext",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NavigationContext"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NamedNavigationPathDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/path": {
      "get": {
        "tags": ["locations-navigation-controller"],
        "summary": "Find a path to a node for the provided nodeId. Only nodes of type LOCATION and ZONE are supported",
        "operationId": "LocationsNavigation_getNavigationPathToLocationNode",
        "parameters": [{
          "name": "nodeId",
          "in": "query",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationNodeIdentifierDto"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NamedLocationNavigationNodeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/nodes": {
      "get": {
        "tags": ["locations-navigation-controller"],
        "operationId": "LocationsNavigation_search2",
        "parameters": [{
          "name": "text",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "limit",
          "in": "query",
          "required": true,
          "schema": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        }, {
          "name": "navigationContext",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NavigationContext"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationNodeSearchResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/location-ids": {
      "get": {
        "tags": ["locations-navigation-controller"],
        "operationId": "LocationsNavigation_getLocationIdsForNodes",
        "parameters": [{
          "name": "paths",
          "in": "query",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NavigationPathsDto"
              }
            }
          }
        }, {
          "name": "navigationContext",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NavigationContext"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationIdDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/navigation/children": {
      "get": {
        "tags": ["locations-navigation-controller"],
        "operationId": "LocationsNavigation_getChildrenNodesForPath",
        "parameters": [{
          "name": "pathNodeIds",
          "in": "query",
          "required": false,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationNodeIdentifierDto"
            },
            "default": []
          }
        }, {
          "name": "navigationContext",
          "in": "query",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NavigationContext"
              }
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildNodesDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/": {
      "get": {
        "tags": ["locations-controller"],
        "summary": "Deprecated. Use getAllUserLocations",
        "operationId": "Locations_getAllLocationsOld",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDtoDeprecated"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/auth/users/current": {
      "get": {
        "tags": ["auth-controller"],
        "summary": "Returns current user info",
        "operationId": "Auth_getCurrentUserInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/auth/token": {
      "get": {
        "tags": ["auth-controller"],
        "summary": "Authenticate using username and password. If a temporal password is used, the new one needs to be provided. Returns an access, refresh and ID token",
        "operationId": "Auth_token",
        "parameters": [{
          "name": "username",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "password",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "newPassword",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/auth/permissions/user-info/{userName}/statements": {
      "get": {
        "tags": ["permission-controller"],
        "summary": "get permission statements by user name",
        "operationId": "Permission_getPermissionStatementsByUserName",
        "parameters": [{
          "name": "userName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourcePermissionDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/auth/permissions/resource-types/{resourceType}": {
      "get": {
        "tags": ["permission-controller"],
        "summary": "get permissions by ResourceType and instanceIds for current user",
        "operationId": "Permission_getPermissionsByResourceAndInstanceIds",
        "parameters": [{
          "name": "resourceType",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "instanceIds",
          "in": "query",
          "required": true,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstancePermissionsDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/auth/permissions/feature-accessibility": {
      "get": {
        "tags": ["permission-controller"],
        "summary": "get feature accessibility for current user",
        "operationId": "Permission_getFeatureAccessibility",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureAccessibilityDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/analytics/quicksight/dashboards": {
      "get": {
        "tags": ["analytics-controller"],
        "summary": "Returns list of available quicksight dashboards",
        "operationId": "Analytics_listQuickSightDashboards",
        "parameters": [{
          "name": "idToken",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuickSightDashboard"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/analytics/quicksight/dashboards/{dashboardId}/url": {
      "get": {
        "tags": ["analytics-controller"],
        "summary": "Returns list of available quicksight dashboards",
        "operationId": "Analytics_getQuickSightDashboardUrl",
        "parameters": [{
          "name": "dashboardId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "idToken",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/scopes/settings/{scopeSettingsId}": {
      "delete": {
        "tags": ["scope-settings-controller"],
        "summary": "Delete existing scope settings",
        "operationId": "ScopeSettings_deleteScopeSettings1",
        "parameters": [{
          "name": "scopeSettingsId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    },
    "/rest/v-1/locations/{locationId}": {
      "delete": {
        "tags": ["locations-controller"],
        "summary": "Delete location",
        "operationId": "Locations_deleteLocation",
        "parameters": [{
          "name": "locationId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/rest/v-1/auth/tokens/{tokenId}": {
      "delete": {
        "tags": ["token-controller"],
        "operationId": "Token_deleteToken",
        "parameters": [{
          "name": "tokenId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ResendCountersRequest": {
        "type": "object",
        "properties": {
          "onlySessionCounters": {
            "type": "boolean"
          },
          "shouldBeInstant": {
            "type": "boolean"
          }
        }
      },
      "ResendDetailsCountersRequest": {
        "type": "object",
        "properties": {
          "shouldBeInstant": {
            "type": "boolean"
          },
          "counterThatMustBePresent": {
            "type": "string",
            "enum": ["EXPECTED", "REMAINING", "TEAM_FOUND", "TEAM_OVERS", "NEW_READS_IN_SESSION"]
          }
        }
      },
      "LogisticsProcessCreated": {
        "type": "object",
        "properties": {
          "processId": {
            "type": "string"
          },
          "notificationType": {
            "$ref": "#/components/schemas/NotificationType"
          }
        }
      },
      "NotificationType": {
        "type": "string",
        "enum": ["PROCESS_CREATED", "PROCESS_STATE_CHANGED", "SHIPMENT_CONTENT_CHANGED"]
      },
      "LogisticsProcessStateChanged": {
        "type": "object",
        "properties": {
          "processId": {
            "type": "string"
          },
          "notificationType": {
            "$ref": "#/components/schemas/NotificationType"
          },
          "state": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING_VALIDATION", "VALIDATING", "VALIDATION_COMPLETED", "SUBMITTED", "CANCELLED", "CLOSED"]
          }
        }
      },
      "LogisticsShipmentContentUpdated": {
        "type": "object",
        "properties": {
          "processId": {
            "type": "string"
          },
          "notificationType": {
            "$ref": "#/components/schemas/NotificationType"
          },
          "addedUnits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentUnit"
            }
          },
          "removedUnits": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentUnitReference"
            }
          }
        }
      },
      "BillOfMaterial": {
        "type": "object",
        "properties": {
          "items": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "expectedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "registeredQuantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ShipmentUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "billOfMaterial": {
            "$ref": "#/components/schemas/BillOfMaterial"
          },
          "sourceReferenceId": {
            "type": "string"
          },
          "destinationReferenceId": {
            "type": "string"
          },
          "parentProcessId": {
            "type": "string"
          },
          "unitState": {
            "type": "string",
            "enum": ["IN_TRANSIT", "ALLOCATED", "PROCESSED", "PROCESSED_NOT_CONFIRMED"]
          },
          "registeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "originCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "allocatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "validationStatus": {
            "type": "string",
            "enum": ["PENDING", "SUCCEED", "DEVIATION_ACCEPTED", "DEVIATION_CRITICAL"]
          }
        }
      },
      "ShipmentUnitReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          }
        }
      },
      "AlarmUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "latestState": {
            "$ref": "#/components/schemas/AlarmDto"
          }
        }
      },
      "AlarmDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["PRODUCT", "HARD_TAG"]
          },
          "status": {
            "type": "string",
            "enum": ["OPEN", "ACKNOWLEDGED", "IGNORED"]
          },
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "readPointName": {
            "type": "string"
          },
          "epc": {
            "type": "string"
          },
          "ean": {
            "type": "string"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "acknowledgeTime": {
            "type": "string",
            "format": "date-time"
          },
          "acknowledgedBy": {
            "type": "string"
          }
        }
      },
      "Any": {
        "oneOf": [{
          "type": "string"
        }, {
          "type": "number"
        }, {
          "type": "integer"
        }, {
          "type": "boolean"
        }, {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Any"
          }
        }]
      },
      "ValueDto": {
        "oneOf": [{
          "type": "string"
        }, {
          "type": "number"
        }, {
          "type": "integer"
        }, {
          "type": "boolean"
        }, {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Any"
          }
        }]
      },
      "AuthError": {
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "DirectionDisplayName": {
        "type": "string",
        "enum": ["asc", "desc"]
      },
      "FilterOperator": {
        "type": "string",
        "enum": ["is", "is not", "in", "not in", ">", ">=", "<", "<=", "contains"]
      },
      "FilterValueDto": {
        "required": ["attributeName", "operationCode"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "operationCode": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "value": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "values": {
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "object",
              "deprecated": true
            }
          }
        }
      },
      "OldUpdateThingRequest": {
        "required": ["newValues", "searchRequest"],
        "type": "object",
        "properties": {
          "searchRequest": {
            "$ref": "#/components/schemas/SearchThingsRequestDto"
          },
          "newValues": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "SearchThingsRequestDto": {
        "required": ["currentPage", "filters", "pageSize", "thingTypeId"],
        "type": "object",
        "properties": {
          "thingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "findTotal": {
            "type": "boolean"
          }
        }
      },
      "RecordDto": {
        "required": ["attributes"],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "SearchThingsResponseDto": {
        "required": ["currentPage", "filters", "findTotal", "pageSize", "thingTypeId", "things", "totalResult"],
        "type": "object",
        "properties": {
          "thingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          },
          "things": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ThingsQueryDto": {
        "required": ["filters", "thingTypeId"],
        "type": "object",
        "properties": {
          "thingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "UpdateThingsRequestDto": {
        "required": ["query", "update"],
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/ThingsQueryDto"
          },
          "update": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "CreateJoinOptionDto": {
        "required": ["filterExpressions", "name", "zoneIds"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "filterExpressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionForExistingAttributeFilterDto"
            }
          },
          "expectedAttributesFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "ExpressionForExistingAttributeFilterDto": {
        "required": ["filterId"],
        "type": "object",
        "properties": {
          "filterId": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/ValueDto"
          }
        }
      },
      "UpdateScopeSettingsRequestDto": {
        "required": ["id", "joinOptions", "name", "quantityCountFieldId", "quantityEanFieldId", "quantitySrcId", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "quantitySrcId": {
            "type": "string"
          },
          "quantityEanFieldId": {
            "type": "string"
          },
          "quantityCountFieldId": {
            "type": "string"
          },
          "quantityLocationFilterId": {
            "type": "string"
          },
          "quantityZoneFilterId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "joinOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateJoinOptionDto"
            }
          },
          "expectedAttributesFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "JoinOptionDto": {
        "required": ["filterExpressions", "id", "name", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "filterExpressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionForExistingAttributeFilterDto"
            }
          },
          "expectedAttributesFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "ScopeSettingsDto": {
        "required": ["id", "joinOptions", "name", "quantityCountFieldId", "quantityEanFieldId", "quantitySrcId", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantitySrcId": {
            "type": "string"
          },
          "quantityEanFieldId": {
            "type": "string"
          },
          "quantityCountFieldId": {
            "type": "string"
          },
          "quantityLocationFilterId": {
            "type": "string"
          },
          "quantityZoneFilterId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "joinOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JoinOptionDto"
            }
          },
          "expectedAttributesFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "AttributeValueDto": {
        "required": ["attributeName"],
        "type": "object",
        "properties": {
          "attributeName": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/ValueDto"
          }
        }
      },
      "DeprecatedCreateJoinOptionDto": {
        "required": ["name", "paramValues", "zoneIds"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "paramValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValueDto"
            }
          }
        }
      },
      "DeprecatedScopeSettingsRequestDto": {
        "required": ["joinOptions", "name", "quantityCountFieldId", "quantityEanFieldId", "quantitySrcId", "zoneIds"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "quantitySrcId": {
            "type": "string"
          },
          "quantityEanFieldId": {
            "type": "string"
          },
          "quantityCountFieldId": {
            "type": "string"
          },
          "quantityLocationFilterId": {
            "type": "string"
          },
          "quantityZoneFilterId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "joinOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedCreateJoinOptionDto"
            }
          },
          "expectedAttributesFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "DeprecatedJoinOptionsDto": {
        "required": ["name", "paramValues", "zoneIds"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "paramValues": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "DeprecatedScopeSettingsDto": {
        "required": ["id", "joinOptions", "name", "quantityCountFieldId", "quantityEanFieldId", "quantitySrcId", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantitySrcId": {
            "type": "string"
          },
          "quantityEanFieldId": {
            "type": "string"
          },
          "quantityCountFieldId": {
            "type": "string"
          },
          "quantityLocationFilterId": {
            "type": "string"
          },
          "quantityZoneFilterId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "joinOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedJoinOptionsDto"
            }
          },
          "expectedAttributesFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "AttributeDisplayDefinitionDto": {
        "required": ["attributeName"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "groupType": {
            "type": "string"
          },
          "aggregateFunction": {
            "type": "string"
          },
          "useInTotal": {
            "type": "boolean"
          },
          "editable": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedAttributeFilterDefinitionDto": {
        "required": ["attributeName", "canBeOverridden", "operationCode"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "valueIsSet": {
            "type": "boolean"
          },
          "operationCode": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "canBeOverridden": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedSaveTableReportRequestDto": {
        "required": ["attributes", "defaultPageSize", "description", "filters", "name", "rootThingTypeId", "runOnLoad", "useAggregation"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedAttributeFilterDefinitionDto"
            }
          },
          "defaultPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "useAggregation": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedReportDto": {
        "required": ["attributes", "author", "filters", "name", "rootThingTypeId", "type"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ReportTypeDto"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedAttributeFilterDefinitionDto"
            }
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ReportTypeDto": {
        "type": "string",
        "enum": ["TABLE", "MAP"]
      },
      "AttributeFilterDefinitionDto": {
        "required": ["attributeName", "canBeOverridden", "filterOperator"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "attributeName": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "prefillValue": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "prefillValueIsSet": {
            "type": "boolean"
          },
          "filterOperator": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "canBeOverridden": {
            "type": "boolean"
          }
        }
      },
      "FilterDefinitionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "filterType",
          "mapping": {
            "SIMPLE": "#/components/schemas/AttributeFilterDefinitionDto",
            "GROUP": "#/components/schemas/GroupFilterDefinitionDto"
          }
        },
        "oneOf": [{
          "$ref": "#/components/schemas/AttributeFilterDefinitionDto"
        }, {
          "$ref": "#/components/schemas/GroupFilterDefinitionDto"
        }]
      },
      "GroupFilterDefinitionDto": {
        "required": ["filterDefinitions", "groupOperator"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "groupOperator": {
            "$ref": "#/components/schemas/GroupOperator"
          },
          "filterDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterDefinitionDto"
            }
          }
        }
      },
      "GroupOperator": {
        "type": "string",
        "enum": ["and", "or"]
      },
      "SaveTableReportRequestDto": {
        "required": ["attributes", "defaultPageSize", "description", "groupFilterDefinition", "name", "rootThingTypeId", "runOnLoad", "useAggregation"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "groupFilterDefinition": {
            "$ref": "#/components/schemas/GroupFilterDefinitionDto"
          },
          "defaultPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "useAggregation": {
            "type": "boolean"
          }
        }
      },
      "TableReportDto": {
        "required": ["attributes", "author", "groupFilterDefinition", "name", "rootThingTypeId", "type", "updatedBy"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ReportTypeDto"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "groupFilterDefinition": {
            "$ref": "#/components/schemas/GroupFilterDefinitionDto"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "defaultPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "useAggregation": {
            "type": "boolean"
          }
        }
      },
      "AttributeRefDto": {
        "required": ["attributeName"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          }
        }
      },
      "SaveMapReportRequestDto": {
        "required": ["attributes", "description", "groupFilterDefinition", "name", "positionAttribute", "rootThingTypeId", "runOnLoad", "zoneAttribute"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "groupFilterDefinition": {
            "$ref": "#/components/schemas/GroupFilterDefinitionDto"
          },
          "zoneAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          },
          "positionAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          }
        }
      },
      "MapReportDto": {
        "required": ["attributes", "author", "groupFilterDefinition", "name", "positionAttribute", "rootThingTypeId", "type", "updatedBy", "zoneAttribute"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ReportTypeDto"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "groupFilterDefinition": {
            "$ref": "#/components/schemas/GroupFilterDefinitionDto"
          },
          "positionAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          },
          "zoneAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          }
        }
      },
      "DeprecatedTableReportDto": {
        "required": ["attributes", "author", "filters", "name", "rootThingTypeId", "type"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ReportTypeDto"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedAttributeFilterDefinitionDto"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "defaultPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "useAggregation": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedSaveMapReportRequestDto": {
        "required": ["attributes", "description", "filters", "name", "positionAttribute", "rootThingTypeId", "runOnLoad", "zoneAttribute"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedAttributeFilterDefinitionDto"
            }
          },
          "zoneAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          },
          "positionAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          }
        }
      },
      "DeprecatedMapReportDto": {
        "required": ["attributes", "author", "filters", "name", "positionAttribute", "rootThingTypeId", "type", "zoneAttribute"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ReportTypeDto"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedAttributeFilterDefinitionDto"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "positionAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          },
          "zoneAttribute": {
            "$ref": "#/components/schemas/AttributeRefDto"
          }
        }
      },
      "ProductTaskAttributeFilter": {
        "required": ["caption", "filterValuesSource", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "filterValuesSource": {
            "type": "string",
            "enum": ["ASSETS", "ARTICLES"]
          }
        }
      },
      "RefillingSettingsDto": {
        "required": ["backStorageZone", "id", "locationId", "productTaskAttributesFilters", "salesFloorZone", "shownProductTaskAttribute", "storeZoneId"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "storeZoneId": {
            "type": "integer",
            "format": "int64"
          },
          "backStorageZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "salesFloorZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "offsiteStorageZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "stockTargetSource": {
            "$ref": "#/components/schemas/StockTargetSourceSettings"
          },
          "shownProductTaskAttribute": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShownProductTaskAttribute"
            }
          },
          "productTaskAttributesFilters": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTaskAttributeFilter"
            }
          }
        }
      },
      "RefillingZoneSettings": {
        "required": ["zoneId"],
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "allowCustomerRequests": {
            "type": "boolean"
          }
        }
      },
      "ShownProductTaskAttribute": {
        "required": ["caption", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          }
        }
      },
      "StockTargetSourceSettings": {
        "required": ["groupFilterName", "groupIdAttributeName", "minLevelAttributeName", "productFilterName", "productIdAttributeName", "reportId", "zoneFilterName"],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "zoneFilterName": {
            "type": "string"
          },
          "productFilterName": {
            "type": "string"
          },
          "groupFilterName": {
            "type": "string"
          },
          "productIdAttributeName": {
            "type": "string"
          },
          "groupIdAttributeName": {
            "type": "string"
          },
          "minLevelAttributeName": {
            "type": "string"
          },
          "maxLevelAttributeName": {
            "type": "string"
          },
          "enabledAttributeName": {
            "type": "string"
          }
        }
      },
      "RefillingDashboardSettingsDto": {
        "required": ["attributeNamesToSearchBy"],
        "type": "object",
        "properties": {
          "attributeNamesToSearchBy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Grouping": {
        "required": ["attribute"],
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string"
          }
        }
      },
      "ItemCheckerSettings": {
        "required": ["attributesToShow"],
        "type": "object",
        "properties": {
          "attributesToShow": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultAttributesToSearchBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ItemFinderResultListSettings": {
        "type": "object",
        "properties": {
          "subtitleAttribute": {
            "type": "string"
          }
        }
      },
      "ItemFinderSettingsAttribute": {
        "required": ["attributeSource", "caption", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "attributeSource": {
            "type": "string",
            "enum": ["ASSETS", "ARTICLES"]
          }
        }
      },
      "ItemFinderSettingsDto": {
        "required": ["attributesToSearchBy", "listSettings"],
        "type": "object",
        "properties": {
          "attributesToSearchBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemFinderSettingsAttribute"
            }
          },
          "listSettings": {
            "$ref": "#/components/schemas/ItemFinderResultListSettings"
          }
        }
      },
      "SetHandheldAppSettingsRequestDto": {
        "required": ["enabledFeatures", "itemCheckerSettings", "itemFinderSettings", "stockCountSettings"],
        "type": "object",
        "properties": {
          "enabledFeatures": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["StockCount", "ItemsChecker", "ItemFinder", "GeigerCounter", "Refilling", "Logistics", "Alarms"]
            }
          },
          "stockCountSettings": {
            "$ref": "#/components/schemas/StockCountSetting"
          },
          "itemFinderSettings": {
            "$ref": "#/components/schemas/ItemFinderSettingsDto"
          },
          "itemCheckerSettings": {
            "$ref": "#/components/schemas/ItemCheckerSettings"
          }
        }
      },
      "StockCountSetting": {
        "required": ["allowedCompanyPrefixes", "detailsGroupings"],
        "type": "object",
        "properties": {
          "detailsGroupings": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Grouping"
            }
          },
          "imageAttribute": {
            "type": "string"
          },
          "allowedCompanyPrefixes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HandheldAppSettingsDto": {
        "required": ["articleThingTypeId", "assetThingTypeId", "enabledFeatures", "itemCheckerSettings", "itemFinderSettings", "stockCountSettings"],
        "type": "object",
        "properties": {
          "assetThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "articleThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "enabledFeatures": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["StockCount", "ItemsChecker", "ItemFinder", "GeigerCounter", "Refilling", "Logistics", "Alarms"]
            }
          },
          "stockCountSettings": {
            "$ref": "#/components/schemas/StockCountSetting"
          },
          "itemFinderSettings": {
            "$ref": "#/components/schemas/ItemFinderSettingsDto"
          },
          "itemCheckerSettings": {
            "$ref": "#/components/schemas/ItemCheckerSettings"
          }
        }
      },
      "BillOfMaterialDto": {
        "required": ["items"],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          }
        }
      },
      "ItemDto": {
        "required": ["expectedQuantity", "id", "unitType"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "expectedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "registeredQuantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ShipmentUnitDetailsDto": {
        "required": ["billOfMaterial", "id", "unitState", "unitType"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "billOfMaterial": {
            "$ref": "#/components/schemas/BillOfMaterialDto"
          },
          "sourceReferenceId": {
            "type": "string"
          },
          "destinationReferenceId": {
            "type": "string"
          },
          "unitState": {
            "type": "string",
            "enum": ["IN_TRANSIT", "ALLOCATED", "PROCESSED", "PROCESSED_NOT_CONFIRMED"]
          },
          "originCreatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ShipmentUnitReferenceDto": {
        "required": ["id", "unitType"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          }
        }
      },
      "ProcessError": {
        "required": ["errorCode", "message"],
        "type": "object",
        "properties": {
          "contextProcessId": {
            "type": "string"
          },
          "errorCode": {
            "type": "string",
            "enum": ["PROCESS_NOT_FOUND", "UNIT_NOT_FOUND", "UNIT_NOT_LINKED", "UNIT_ALREADY_PROCESSED", "UNIT_ILLEGAL_DESTINATION_REFERENCE", "UNIT_ILLEGAL_SOURCE_REFERENCE", "ILLEGAL_PROCESS_STATE", "ILLEGAL_PROCESS_OPERATION", "REQUEST_VALIDATION_FAILURE", "UNEXPECTED_EXCEPTION"]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LogisticsProcessDto": {
        "required": ["businessStep", "destinationReference", "id", "processState", "sourceReference"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "businessStep": {
            "type": "string",
            "enum": ["RECEIVING", "SHIPPING"]
          },
          "sourceReference": {
            "type": "string"
          },
          "destinationReference": {
            "type": "string"
          },
          "processState": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING_VALIDATION", "VALIDATING", "VALIDATION_COMPLETED", "SUBMITTED", "CANCELLED", "CLOSED"]
          },
          "details": {
            "$ref": "#/components/schemas/ShipmentDetailsDto"
          }
        }
      },
      "ShipmentDetailsDto": {
        "required": ["problematicUnitsOverview", "unexpectedUnitsOverview", "units"],
        "type": "object",
        "properties": {
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentUnitDto"
            }
          },
          "problematicUnitsOverview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentUnitDto"
            }
          },
          "unexpectedUnitsOverview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentUnitDto"
            }
          }
        }
      },
      "ShipmentUnitDto": {
        "required": ["id", "unitType", "validationStatus"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "billOfMaterial": {
            "$ref": "#/components/schemas/BillOfMaterialDto"
          },
          "validationStatus": {
            "type": "string",
            "enum": ["PENDING", "SUCCEED", "DEVIATION_ACCEPTED", "DEVIATION_CRITICAL"]
          }
        }
      },
      "AttributePresentLocationCriteriaDto": {
        "required": ["attributeName", "criteriaType"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "criteriaType": {
            "$ref": "#/components/schemas/LocationCriteriaType"
          }
        }
      },
      "LocationCriteriaDto": {
        "required": ["criteriaType"],
        "type": "object",
        "properties": {
          "criteriaType": {
            "$ref": "#/components/schemas/LocationCriteriaType"
          }
        },
        "discriminator": {
          "propertyName": "criteriaType",
          "mapping": {
            "PARENT_ID": "#/components/schemas/ParentIdLocationCriteriaDto",
            "ATTRIBUTE_PRESENT": "#/components/schemas/AttributePresentLocationCriteriaDto"
          }
        },
        "oneOf": [{
          "$ref": "#/components/schemas/ParentIdLocationCriteriaDto"
        }, {
          "$ref": "#/components/schemas/AttributePresentLocationCriteriaDto"
        }]
      },
      "LocationCriteriaType": {
        "type": "string",
        "enum": ["PARENT_ID", "ATTRIBUTE_PRESENT"]
      },
      "LocationNodeTransformerDto": {
        "required": ["transformerType"],
        "type": "object",
        "properties": {
          "transformerType": {
            "$ref": "#/components/schemas/LocationNodeTransformerType"
          }
        },
        "discriminator": {
          "propertyName": "transformerType",
          "mapping": {
            "USE_ATTRIBUTE_IN_ADDITIONAL_INFO": "#/components/schemas/UseAttributeInAdditionalInfoDto"
          }
        },
        "oneOf": [{
          "$ref": "#/components/schemas/UseAttributeInAdditionalInfoDto"
        }]
      },
      "LocationNodeTransformerType": {
        "type": "string",
        "enum": ["USE_ATTRIBUTE_IN_ADDITIONAL_INFO"]
      },
      "LocationType": {
        "type": "string",
        "enum": ["LOCATION", "ZONE"]
      },
      "LocationViewRuleParametersDto": {
        "required": ["locationCriteria", "transformer"],
        "type": "object",
        "properties": {
          "locationCriteria": {
            "$ref": "#/components/schemas/LocationCriteriaDto"
          },
          "transformer": {
            "$ref": "#/components/schemas/LocationNodeTransformerDto"
          }
        }
      },
      "ParentIdLocationCriteriaDto": {
        "required": ["criteriaType"],
        "type": "object",
        "properties": {
          "parentLocationId": {
            "type": "integer",
            "format": "int64"
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationType"
          },
          "criteriaType": {
            "$ref": "#/components/schemas/LocationCriteriaType"
          }
        }
      },
      "UseAttributeInAdditionalInfoDto": {
        "required": ["attributeName", "transformerType"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "transformerType": {
            "$ref": "#/components/schemas/LocationNodeTransformerType"
          }
        }
      },
      "LocationViewRuleDto": {
        "required": ["id", "locationNodeCriteria", "transformer"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "locationNodeCriteria": {
            "$ref": "#/components/schemas/LocationCriteriaDto"
          },
          "transformer": {
            "$ref": "#/components/schemas/LocationNodeTransformerDto"
          }
        }
      },
      "LocationGroupingParametersDto": {
        "required": ["attributeName", "label", "locationCriteria", "priority"],
        "type": "object",
        "properties": {
          "locationCriteria": {
            "$ref": "#/components/schemas/LocationCriteriaDto"
          },
          "label": {
            "type": "string"
          },
          "attributeName": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LocationGroupingDto": {
        "required": ["attributeName", "id", "label", "locationCriteria", "priority"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "locationCriteria": {
            "$ref": "#/components/schemas/LocationCriteriaDto"
          },
          "label": {
            "type": "string"
          },
          "attributeName": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PermissionAuthorityDto": {
        "required": ["id", "principalType", "statements"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourcePermissionDto"
            }
          },
          "principalType": {
            "type": "string",
            "enum": ["ROLE", "USER"]
          }
        }
      },
      "ResourcePermissionDto": {
        "required": ["effect", "instanceIds", "permission", "resourceType"],
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string"
          },
          "instanceIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permission": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "effect": {
            "type": "string",
            "enum": ["ALLOW", "DENY"]
          }
        }
      },
      "AssetDto": {
        "required": ["attributes", "businessSteps", "ean", "epc"],
        "type": "object",
        "properties": {
          "epc": {
            "type": "string"
          },
          "ean": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          },
          "businessSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessStepDto"
            }
          }
        }
      },
      "BusinessStepDto": {
        "required": ["attributes", "name", "timestampUtcMills"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "timestampUtcMills": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "UpdateAssetsRequestDto": {
        "required": ["assets"],
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetDto"
            }
          },
          "timestampUtcMills": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RegistrationResult": {
        "required": ["epc"],
        "type": "object",
        "properties": {
          "epc": {
            "type": "string"
          }
        }
      },
      "AttributeTypeName": {
        "type": "string",
        "enum": ["String", "Number", "Integer", "Values", "Timestamp", "Boolean", "DateTime", "Position", "OffsetDateTime", "Gtin"]
      },
      "LifeCycleAttributeConditionDto": {
        "required": ["attributeName", "values"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "values": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "ProductLifeCycleQualifierDto": {
        "required": ["inactive"],
        "type": "object",
        "properties": {
          "inactive": {
            "$ref": "#/components/schemas/LifeCycleAttributeConditionDto"
          }
        }
      },
      "ProductSettingsDto": {
        "required": ["productColorAttributeName", "productDescriptionAttributeName", "productGroupingAttributeName", "productIdAttributeName", "productImageUrlAttributeName"],
        "type": "object",
        "properties": {
          "productIdAttributeName": {
            "type": "string"
          },
          "productGroupingAttributeName": {
            "type": "string"
          },
          "productSecondGroupingAttributeName": {
            "type": "string"
          },
          "productGroupingSeparator": {
            "type": "string"
          },
          "productImageUrlAttributeName": {
            "type": "string"
          },
          "productDescriptionAttributeName": {
            "type": "string"
          },
          "productColorAttributeName": {
            "type": "string"
          },
          "auxiliaryAttributes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lifeCycleQualifier": {
            "$ref": "#/components/schemas/ProductLifeCycleQualifierDto"
          },
          "rules": {
            "$ref": "#/components/schemas/SimpleRulesDto"
          }
        }
      },
      "SimpleRulesDto": {
        "type": "object",
        "properties": {
          "subSiteToDisposition": {
            "$ref": "#/components/schemas/SubSiteToDispositionMapDto"
          }
        }
      },
      "SubSiteToDispositionMapDto": {
        "required": ["mappings", "ruleName"],
        "type": "object",
        "properties": {
          "ruleName": {
            "type": "string"
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubSiteToDispositionMappingDto"
            }
          }
        }
      },
      "SubSiteToDispositionMappingDto": {
        "type": "object",
        "properties": {
          "subSite": {
            "$ref": "#/components/schemas/ValueWithTypeDto"
          },
          "disposition": {
            "$ref": "#/components/schemas/ValueWithTypeDto"
          }
        }
      },
      "ValueWithTypeDto": {
        "required": ["type", "value"],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AttributeTypeName"
          },
          "value": {
            "$ref": "#/components/schemas/ValueDto"
          }
        }
      },
      "ArticleDto": {
        "required": ["additionalAttributes", "ean", "imageId", "skuDescription"],
        "type": "object",
        "properties": {
          "ean": {
            "type": "string"
          },
          "skuDescription": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "additionalAttributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "AlarmSettingsDto": {
        "required": ["ignoreAfterNumberOfSeconds"],
        "type": "object",
        "properties": {
          "ignoreAfterNumberOfSeconds": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateThingRequestDto": {
        "required": ["attributesValues", "thingTypeId"],
        "type": "object",
        "properties": {
          "thingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "attributesValues": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "AttributeDto": {
        "required": ["name", "type"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AttributeTypeName"
          },
          "nullable": {
            "type": "boolean"
          }
        }
      },
      "CreateThingTypeRequestDto": {
        "required": ["attributes", "name", "primaryKey"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDto"
            }
          },
          "primaryKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trackChanges": {
            "type": "boolean"
          }
        }
      },
      "AttributeSettingsDto": {
        "required": ["attributeName", "direction"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          }
        }
      },
      "CompoundIndexDto": {
        "required": ["attributes", "type"],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeSettingsDto"
            }
          },
          "type": {
            "type": "string",
            "enum": ["COMPOUND"]
          }
        }
      },
      "ThingTypeDto": {
        "required": ["attributes", "customIndexes", "id", "name", "primaryKey", "trackChanges"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDto"
            }
          },
          "primaryKey": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompoundIndexDto"
            }
          },
          "trackChanges": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedCreateStockCountRequestDto": {
        "required": ["description", "locationId", "scopeDefinitionId", "scopeParams", "zoneIds"],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "description": {
            "type": "string"
          },
          "scopeDefinitionId": {
            "type": "string"
          },
          "scopeParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedScopeParameterValueDto"
            }
          },
          "automatic": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedScopeParameterValueDto": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "deprecated": true,
            "items": {
              "type": "object",
              "deprecated": true
            }
          },
          "value": {
            "type": "object"
          }
        }
      },
      "StockCountDto": {
        "required": ["createdBy", "description", "id", "locationId", "scopeId", "scopeName", "startTimestamp", "status", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "scopeId": {
            "type": "string"
          },
          "scopeName": {
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateStockCountRequestDto": {
        "required": ["description", "locationId", "scopeDefinitionId", "scopeFilterExpressions", "zoneIds"],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "description": {
            "type": "string"
          },
          "scopeDefinitionId": {
            "type": "string"
          },
          "scopeFilterExpressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressionForExistingAttributeFilterDto"
            }
          },
          "automatic": {
            "type": "boolean"
          }
        }
      },
      "SearchStockCountsResultsRequest": {
        "required": ["currentPage", "locationIds", "pageSize", "zoneIds"],
        "type": "object",
        "properties": {
          "locationIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "zoneIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "findTotal": {
            "type": "boolean"
          }
        }
      },
      "SearchStockCountsResultsResponse": {
        "required": ["currentPage", "findTotal", "pageSize", "stockCountsResults", "totalResult"],
        "type": "object",
        "properties": {
          "stockCountsResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockCountResultsSummaryDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StockCountResultsSummaryDto": {
        "required": ["createdByUser", "donePercentage", "expected", "locationId", "lost", "lostPercentage", "overs", "oversPercentage", "scanned", "scopeParameters", "startTimestamp", "status", "stockCountId", "totalAccuracy", "zoneIds"],
        "type": "object",
        "properties": {
          "stockCountId": {
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "scopeParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "createdByUser": {
            "type": "string"
          },
          "finishedByUser": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "expected": {
            "type": "integer",
            "format": "int64"
          },
          "scanned": {
            "type": "integer",
            "format": "int64"
          },
          "donePercentage": {
            "type": "integer",
            "format": "int64"
          },
          "overs": {
            "type": "integer",
            "format": "int64"
          },
          "oversPercentage": {
            "type": "integer",
            "format": "int64"
          },
          "lost": {
            "type": "integer",
            "format": "int64"
          },
          "lostPercentage": {
            "type": "integer",
            "format": "int64"
          },
          "totalAccuracy": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PushEventsRequest": {
        "required": ["events"],
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockCountEventDto"
            }
          }
        }
      },
      "StockCountEventDto": {
        "required": ["ean", "epc", "epcHex", "timestamp", "zoneId"],
        "type": "object",
        "properties": {
          "ean": {
            "type": "string"
          },
          "epc": {
            "type": "string"
          },
          "epcHex": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "subZoneId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateStockCountSessionRequest": {
        "required": ["deviceId", "stockCountId", "zoneIds"],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "stockCountId": {
            "type": "string"
          },
          "joinOptionId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "StockCountSessionDto": {
        "required": ["deviceId", "id", "scopeId", "startTimestamp", "status", "stockCountId", "userId"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "stockCountId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "scopeId": {
            "type": "string"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "DeprecatedCreateStockCountSessionRequest": {
        "required": ["deviceId", "sessionSpecific", "stockCountId", "zoneIds"],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          },
          "stockCountId": {
            "type": "string"
          },
          "sessionSpecific": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedScopeParameterValueDto"
            }
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CreateScopeSettingsRequestDto": {
        "required": ["joinOptions", "name", "quantityCountFieldId", "quantityEanFieldId", "quantitySrcId", "zoneIds"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "quantitySrcId": {
            "type": "string"
          },
          "quantityEanFieldId": {
            "type": "string"
          },
          "quantityCountFieldId": {
            "type": "string"
          },
          "quantityLocationFilterId": {
            "type": "string"
          },
          "quantityZoneFilterId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "joinOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateJoinOptionDto"
            }
          },
          "expectedAttributesFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "DeprecatedCreateScopeSettingsRequest": {
        "required": ["name", "quantityCountFieldId", "quantityEanFieldId", "quantitySrcId"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "quantitySrcId": {
            "type": "string"
          },
          "quantityEanFieldId": {
            "type": "string"
          },
          "quantityCountFieldId": {
            "type": "string"
          },
          "quantityLocationFilterId": {
            "type": "string"
          },
          "quantityZoneFilterId": {
            "type": "string"
          }
        }
      },
      "SearchScopeSettingsRequest": {
        "required": ["currentPage", "pageSize"],
        "type": "object",
        "properties": {
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "findTotal": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedSearchScopeSettingsResponse": {
        "required": ["currentPage", "findTotal", "pageSize", "result", "totalResult"],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedScopeSettingsDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeprecatedTableReportResultsRequestDto": {
        "required": ["currentPage", "filters", "pageSize"],
        "type": "object",
        "properties": {
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "findTotal": {
            "type": "boolean"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "ColumnDto": {
        "required": ["editable", "key", "label"],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "editable": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedTableReportResultsResponseDto": {
        "required": ["columns", "currentPage", "filters", "findTotal", "pageSize", "reportId", "result", "totalResult"],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnDto"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ValueDto"
              }
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeprecatedListFiltersValuesRequestDto": {
        "required": ["requestedFilters", "specifiedFilters"],
        "type": "object",
        "properties": {
          "specifiedFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          },
          "requestedFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestedFilterDto"
            }
          }
        }
      },
      "RequestedFilterDto": {
        "required": ["allValues", "attributeName"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "allValues": {
            "type": "boolean"
          }
        }
      },
      "FilterPossibleValuesDto": {
        "required": ["attributeName", "isValuesListTrimmed", "possibleValues"],
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "isValuesListTrimmed": {
            "type": "boolean"
          },
          "possibleValues": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ReportFiltersValuesDto": {
        "required": ["filtersPossibleValues"],
        "type": "object",
        "properties": {
          "filtersPossibleValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterPossibleValuesDto"
            }
          }
        }
      },
      "ReportsSearchRequestDto": {
        "required": ["currentPage", "pageSize", "reportTypes"],
        "type": "object",
        "properties": {
          "reportTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportTypeDto"
            }
          },
          "author": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "findTotal": {
            "type": "boolean"
          }
        }
      },
      "DeprecatedReportsListResponse": {
        "required": ["currentPage", "findTotal", "pageSize", "result", "totalResult"],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedReportDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeprecatedMapReportResultsRequestDto": {
        "required": ["filters"],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "DeprecatedMapReportResultsResponseDto": {
        "required": ["filters", "reportId", "result"],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ValueDto"
              }
            }
          }
        }
      },
      "DeprecatedCreateRefillingTaskDto": {
        "required": ["productId", "requirements", "type", "userName", "zoneId"],
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": ["SIMPLE_REFILLING", "CUSTOMER_DRIVEN"]
          },
          "productId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "requirements": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DeprecatedProductDto": {
        "required": ["description", "imageUrl", "productId"],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "auxiliaryAttributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "DeprecatedRefillingTaskDto": {
        "required": ["createdBy", "creationTime", "id", "manuallyRequested", "product", "productId", "requirements", "sourceZoneId", "state", "targetZoneId", "type", "urgent"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["SIMPLE_REFILLING", "CUSTOMER_DRIVEN"]
          },
          "productId": {
            "type": "string"
          },
          "sourceZoneId": {
            "type": "integer",
            "format": "int64"
          },
          "targetZoneId": {
            "type": "integer",
            "format": "int64"
          },
          "urgent": {
            "type": "boolean"
          },
          "manuallyRequested": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "enum": ["OPEN", "ACCEPTED", "COMPLETED", "NOT_FOUND", "CANCELLED"]
          },
          "product": {
            "$ref": "#/components/schemas/DeprecatedProductDto"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ParticipatingUser"
          },
          "pickedBy": {
            "$ref": "#/components/schemas/TransitionData"
          },
          "finishedBy": {
            "$ref": "#/components/schemas/TransitionData"
          },
          "requirements": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ParticipatingUser": {
        "required": ["userId", "userName"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "TransitionData": {
        "required": ["time", "user"],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/ParticipatingUser"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateRefillingTaskDto": {
        "required": ["requirements", "type", "userName", "zoneId"],
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": ["SIMPLE_REFILLING", "CUSTOMER_DRIVEN"]
          },
          "productId": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "userName": {
            "type": "string"
          },
          "requirements": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ProductDto": {
        "required": ["description"],
        "type": "object",
        "properties": {
          "productId": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "auxiliaryAttributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "RefillingTaskDto": {
        "required": ["createdBy", "creationTime", "id", "manuallyRequested", "product", "requirements", "sourceZoneId", "state", "targetZoneId", "type", "urgent"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["SIMPLE_REFILLING", "CUSTOMER_DRIVEN"]
          },
          "productId": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "sourceZoneId": {
            "type": "integer",
            "format": "int64"
          },
          "targetZoneId": {
            "type": "integer",
            "format": "int64"
          },
          "urgent": {
            "type": "boolean"
          },
          "manuallyRequested": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "enum": ["OPEN", "ACCEPTED", "COMPLETED", "NOT_FOUND", "CANCELLED"]
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "createdBy": {
            "$ref": "#/components/schemas/ParticipatingUser"
          },
          "pickedBy": {
            "$ref": "#/components/schemas/TransitionData"
          },
          "finishedBy": {
            "$ref": "#/components/schemas/TransitionData"
          },
          "requirements": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CreateRefillingSettingsDto": {
        "required": ["backStorageZone", "locationId", "productTaskAttributesFilters", "salesFloorZone", "shownProductTaskAttribute", "storeZoneId"],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "storeZoneId": {
            "type": "integer",
            "format": "int64"
          },
          "backStorageZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "salesFloorZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "offsiteStorageZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "stockTargetSource": {
            "$ref": "#/components/schemas/StockTargetSourceSettings"
          },
          "shownProductTaskAttribute": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShownProductTaskAttribute"
            }
          },
          "productTaskAttributesFilters": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTaskAttributeFilter"
            }
          }
        }
      },
      "AttributeWithValueDto": {
        "required": ["attribute"],
        "type": "object",
        "properties": {
          "attribute": {
            "$ref": "#/components/schemas/AttributeDto"
          },
          "value": {
            "$ref": "#/components/schemas/ValueDto"
          }
        }
      },
      "CreateLocationDto": {
        "required": ["additionalAttributes", "name"],
        "type": "object",
        "properties": {
          "customId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "parentId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "additionalAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWithValueDto"
            }
          }
        }
      },
      "CalibrationDto": {
        "required": ["referencePoints"],
        "type": "object",
        "properties": {
          "referencePoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferencePointDto"
            }
          }
        }
      },
      "GeometryDto": {
        "required": ["coordinates", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["MultiPolygon", "Polygon"]
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "GeometrySettingsDto": {
        "required": ["geometry"],
        "type": "object",
        "properties": {
          "geometry": {
            "$ref": "#/components/schemas/GeometryDto"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "LocationDtoDeprecated": {
        "required": ["id", "name", "subLocations", "zones"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "subLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationDtoDeprecated"
            }
          },
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneDtoDeprecated"
            }
          }
        }
      },
      "PointDto": {
        "required": ["x", "y"],
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ReferencePointDto": {
        "required": ["mapPoint", "originPoint"],
        "type": "object",
        "properties": {
          "originPoint": {
            "$ref": "#/components/schemas/PointDto"
          },
          "mapPoint": {
            "$ref": "#/components/schemas/PointDto"
          }
        }
      },
      "ViewSettingsDto": {
        "type": "object",
        "properties": {
          "defaultZoom": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ZoneDtoDeprecated": {
        "required": ["id", "locationId", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "customerReferenceCode": {
            "type": "string"
          },
          "map": {
            "$ref": "#/components/schemas/ZoneMapDto"
          },
          "geometrySettings": {
            "$ref": "#/components/schemas/GeometrySettingsDto"
          }
        }
      },
      "ZoneMapDto": {
        "type": "object",
        "properties": {
          "calibration": {
            "$ref": "#/components/schemas/CalibrationDto"
          },
          "viewSettings": {
            "$ref": "#/components/schemas/ViewSettingsDto"
          }
        }
      },
      "CreateZoneDtoDeprecated": {
        "required": ["locationId", "name"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "parentZoneId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LocationDto": {
        "required": ["additionalAttributes", "id", "name", "subLocations", "zones"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "subLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationDto"
            }
          },
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneDto"
            }
          },
          "additionalAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWithValueDto"
            }
          }
        }
      },
      "ZoneDto": {
        "required": ["additionalAttributes", "id", "locationId", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "additionalAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWithValueDto"
            }
          },
          "map": {
            "$ref": "#/components/schemas/ZoneMapDto"
          },
          "geometrySettings": {
            "$ref": "#/components/schemas/GeometrySettingsDto"
          }
        }
      },
      "CreateZoneDto": {
        "required": ["additionalAttributes", "locationId", "name"],
        "type": "object",
        "properties": {
          "customId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "locationId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "parentZoneId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "additionalAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWithValueDto"
            }
          }
        }
      },
      "CreateTokenRequestDto": {
        "required": ["locationId"],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string"
          }
        }
      },
      "TokenDto": {
        "required": ["roles", "token", "userEmail"],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          },
          "locationId": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SearchProductRequestDto": {
        "required": ["filters"],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValueDto"
            }
          }
        }
      },
      "GroupQuantitiesDto": {
        "required": ["groupId", "quantitiesPerZone"],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "quantitiesPerZone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneQuantityDto"
            }
          }
        }
      },
      "ProductAvailabilityDto": {
        "required": ["product", "quantitiesPerGroup"],
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "quantitiesPerGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupQuantitiesDto"
            }
          }
        }
      },
      "ZoneQuantityDto": {
        "required": ["quantity", "zoneId"],
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateAlarmDto": {
        "required": ["readPointName", "type", "zoneId"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["PRODUCT", "HARD_TAG"]
          },
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "readPointName": {
            "type": "string"
          },
          "epc": {
            "type": "string"
          },
          "ean": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "UpdateThingTypeRequestDto": {
        "required": ["attributes", "customIndexes", "name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDto"
            }
          },
          "customIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompoundIndexDto"
            }
          },
          "trackChanges": {
            "type": "boolean"
          }
        }
      },
      "UpdateStockCountRequestDto": {
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["CLOSED", "CANCELLED"]
          }
        }
      },
      "UpdateStockCountSessionRequest": {
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "CLOSED", "CANCELLED"]
          }
        }
      },
      "ChangeTaskStateDto": {
        "required": ["newState", "userName", "zoneId"],
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          },
          "newState": {
            "type": "string",
            "enum": ["OPEN", "ACCEPTED", "COMPLETED", "NOT_FOUND", "CANCELLED"]
          }
        }
      },
      "UpdateProcessRequest": {
        "required": ["action"],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["SUBMIT", "CLOSE", "CANCEL", "STAGE_ALL"]
          }
        }
      },
      "ProcessUpdateResultDto": {
        "required": ["processId", "state"],
        "type": "object",
        "properties": {
          "processId": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING_VALIDATION", "VALIDATING", "VALIDATION_COMPLETED", "SUBMITTED", "CANCELLED", "CLOSED"]
          }
        }
      },
      "UpdateZoneDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "map": {
            "$ref": "#/components/schemas/ZoneMapDto"
          },
          "geometrySettings": {
            "$ref": "#/components/schemas/GeometrySettingsDto"
          },
          "additionalAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWithValueDto"
            }
          }
        }
      },
      "UpdateLocationDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "additionalAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWithValueDto"
            }
          }
        }
      },
      "UpdateAlarmStatusDto": {
        "required": ["newStatus"],
        "type": "object",
        "properties": {
          "newStatus": {
            "type": "string",
            "enum": ["OPEN", "ACKNOWLEDGED", "IGNORED"]
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "UsageDto": {
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "AttributeType": {
        "required": ["id", "supportedFilterOperators", "typeName"],
        "type": "object",
        "properties": {
          "typeName": {
            "$ref": "#/components/schemas/AttributeTypeName"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "supportedFilterOperators": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterOperator"
            }
          }
        }
      },
      "AttributeTypeDto": {
        "required": ["name", "supportedFilterOperators"],
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/AttributeType"
          },
          "name": {
            "$ref": "#/components/schemas/AttributeTypeName"
          },
          "supportedFilterOperators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterOperator"
            }
          }
        }
      },
      "DeprecatedDistinctAttributesValuesResponse": {
        "required": ["attributesValues"],
        "type": "object",
        "properties": {
          "attributesValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ValueDto"
              }
            }
          }
        }
      },
      "DistinctAttributesValuesResponse": {
        "required": ["attributesValues"],
        "type": "object",
        "properties": {
          "attributesValues": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ValueDto"
              }
            }
          }
        }
      },
      "StockCountEventsByZoneDto": {
        "required": ["eventCount", "zoneId"],
        "type": "object",
        "properties": {
          "zoneId": {
            "type": "integer",
            "format": "int64"
          },
          "eventCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ScannedForEanDto": {
        "required": ["accuracy", "description", "ean", "expected", "scanned"],
        "type": "object",
        "properties": {
          "ean": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "scanned": {
            "type": "integer",
            "format": "int64"
          },
          "expected": {
            "type": "integer",
            "format": "int64"
          },
          "accuracy": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StockCountResultsDetailsDto": {
        "required": ["details", "summary"],
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/StockCountResultsSummaryDto"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScannedForEanDto"
            }
          }
        }
      },
      "SessionStockCountCounters": {
        "required": ["active", "expected", "newReadsInSession", "readsInSession", "remaining", "teamFound", "teamOvers"],
        "type": "object",
        "properties": {
          "remaining": {
            "type": "integer",
            "format": "int64"
          },
          "expected": {
            "type": "integer",
            "format": "int64"
          },
          "active": {
            "type": "boolean"
          },
          "readsInSession": {
            "type": "integer",
            "format": "int64"
          },
          "newReadsInSession": {
            "type": "integer",
            "format": "int64"
          },
          "teamFound": {
            "type": "integer",
            "format": "int64"
          },
          "teamOvers": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StockCountSessionCounters": {
        "required": ["counters", "sessionId", "type"],
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string"
          },
          "counters": {
            "$ref": "#/components/schemas/SessionStockCountCounters"
          },
          "type": {
            "type": "string",
            "enum": ["SESSION", "PRODUCT", "CATEGORY"]
          }
        }
      },
      "StockCountSessionsCountDto": {
        "required": ["count"],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeprecatedScopeDto": {
        "required": ["definitionId", "id", "name", "parameterValues", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "definitionId": {
            "type": "string"
          },
          "parameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedScopeParameterValueDto"
            }
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "AttributesBasedClassifierDto": {
        "required": ["attributeCriteria"],
        "type": "object",
        "properties": {
          "attributeCriteria": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CriterionDto"
              }
            }
          }
        }
      },
      "CriterionDto": {
        "required": ["operation", "operationArguments"],
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "operationArguments": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/ValueDto"
            }
          },
          "operationArgument": {
            "$ref": "#/components/schemas/ValueDto"
          }
        }
      },
      "ScopeDataDto": {
        "required": ["classifier", "definitionId", "id", "quantitiesByEan"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "definitionId": {
            "type": "string"
          },
          "quantitiesByEan": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "classifier": {
            "$ref": "#/components/schemas/AttributesBasedClassifierDto"
          }
        }
      },
      "AttributeFilterExpressionDto": {
        "required": ["attributeName", "filterOperator"],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "string"
          },
          "attributeName": {
            "type": "string"
          },
          "filterOperator": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "value": {
            "$ref": "#/components/schemas/ValueDto"
          }
        }
      },
      "CompleteFilterExpressionDto": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "filterExpressionType",
          "mapping": {
            "ATTRIBUTE_FILTER_EXPRESSION": "#/components/schemas/AttributeFilterExpressionDto",
            "GROUP_FILTER_EXPRESSION": "#/components/schemas/GroupFilterExpressionDto"
          }
        },
        "oneOf": [{
          "$ref": "#/components/schemas/AttributeFilterExpressionDto"
        }, {
          "$ref": "#/components/schemas/GroupFilterExpressionDto"
        }]
      },
      "GroupFilterExpressionDto": {
        "required": ["filterExpressions", "groupOperator"],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "string"
          },
          "groupOperator": {
            "$ref": "#/components/schemas/GroupOperator"
          },
          "filterExpressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompleteFilterExpressionDto"
            }
          }
        }
      },
      "ScopeDto": {
        "required": ["definitionId", "id", "name", "scopeFilterExpression", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "definitionId": {
            "type": "string"
          },
          "scopeFilterExpression": {
            "$ref": "#/components/schemas/GroupFilterExpressionDto"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "FilterDto": {
        "required": ["id", "label", "operator", "type"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "type": {
            "$ref": "#/components/schemas/AttributeTypeName"
          },
          "prefillValue": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "prefillValueIsSet": {
            "type": "boolean"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "defaultValueIsSet": {
            "type": "boolean"
          }
        }
      },
      "ScopeAttributeDto": {
        "required": ["id", "label", "type"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AttributeTypeName"
          }
        }
      },
      "ScopeSourceDto": {
        "required": ["attributes", "filters", "id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeAttributeDto"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterDto"
            }
          }
        }
      },
      "SearchScopeSettingsResponse": {
        "required": ["currentPage", "findTotal", "pageSize", "result", "totalResult"],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeSettingsDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ScopeDataDefinitionDto": {
        "required": ["id", "joinOptions", "scopeFilters", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scopeFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeFilterDto"
            }
          },
          "locationFilterId": {
            "type": "string"
          },
          "zoneFilterId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "joinOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JoinOptionDto"
            }
          }
        }
      },
      "ScopeDefinitionDto": {
        "required": ["dataDefinition", "id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dataDefinition": {
            "$ref": "#/components/schemas/ScopeDataDefinitionDto"
          }
        }
      },
      "ScopeFilterDto": {
        "required": ["filterId", "filterOperator", "label", "possibleValues", "type"],
        "type": "object",
        "properties": {
          "filterId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AttributeTypeName"
          },
          "filterOperator": {
            "$ref": "#/components/schemas/FilterOperator"
          },
          "prefillValue": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "prefillValueIsSet": {
            "type": "boolean"
          },
          "possibleValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "DeprecatedScopeDataDefinitionDto": {
        "required": ["id", "joinOptions", "parameters", "zoneIds"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedScopeParameterDto"
            }
          },
          "locationFilterId": {
            "type": "string"
          },
          "zoneFilterId": {
            "type": "string"
          },
          "zoneIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "joinOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedJoinOptionsDto"
            }
          }
        }
      },
      "DeprecatedScopeDefinitionDto": {
        "required": ["dataDefinition", "id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dataDefinition": {
            "$ref": "#/components/schemas/DeprecatedScopeDataDefinitionDto"
          }
        }
      },
      "DeprecatedScopeParameterDto": {
        "required": ["label", "multiselect", "name", "possibleValues", "type"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "multiselect": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "object"
          },
          "possibleValues": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "ReportDto": {
        "required": ["attributes", "author", "groupFilterDefinition", "name", "rootThingTypeId", "type", "updatedBy"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ReportTypeDto"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeDisplayDefinitionDto"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "runOnLoad": {
            "type": "boolean"
          },
          "rootThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "groupFilterDefinition": {
            "$ref": "#/components/schemas/GroupFilterDefinitionDto"
          },
          "author": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "TABLE": "#/components/schemas/TableReportDto",
            "MAP": "#/components/schemas/MapReportDto"
          }
        },
        "oneOf": [{
          "$ref": "#/components/schemas/TableReportDto"
        }, {
          "$ref": "#/components/schemas/MapReportDto"
        }]
      },
      "ReportsListResponse": {
        "required": ["currentPage", "findTotal", "pageSize", "result", "totalResult"],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FilterExpressionDto": {
        "type": "object",
        "discriminator": {
          "propertyName": "filterExpressionType",
          "mapping": {
            "ATTRIBUTE_FILTER_EXPRESSION": "#/components/schemas/AttributeFilterExpressionDto",
            "GROUP_FILTER_EXPRESSION": "#/components/schemas/GroupFilterExpressionDto",
            "EXISTING_EXPRESSION": "#/components/schemas/ExpressionForExistingAttributeFilterDto"
          }
        },
        "oneOf": [{
          "$ref": "#/components/schemas/AttributeFilterExpressionDto"
        }, {
          "$ref": "#/components/schemas/GroupFilterExpressionDto"
        }, {
          "$ref": "#/components/schemas/ExpressionForExistingAttributeFilterDto"
        }]
      },
      "ListFiltersValuesRequestDto": {
        "required": ["requestedFilters", "specifiedFilters"],
        "type": "object",
        "properties": {
          "specifiedFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterExpressionDto"
            }
          },
          "requestedFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestedFilterDto"
            }
          }
        }
      },
      "TableReportResultsRequestDto": {
        "required": ["currentPage", "filters", "pageSize"],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterExpressionDto"
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "findTotal": {
            "type": "boolean"
          }
        }
      },
      "TableReportResultsResponseDto": {
        "required": ["columns", "currentPage", "findTotal", "groupFilterExpression", "pageSize", "reportId", "result", "totalResult"],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "groupFilterExpression": {
            "$ref": "#/components/schemas/GroupFilterExpressionDto"
          },
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColumnDto"
            }
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ValueDto"
              }
            }
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/DirectionDisplayName"
          },
          "findTotal": {
            "type": "boolean"
          },
          "totalResult": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MapReportResultsRequestDto": {
        "required": ["filters"],
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterExpressionDto"
            }
          }
        }
      },
      "MapReportResultsResponseDto": {
        "required": ["groupFilterExpression", "reportId", "result"],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "groupFilterExpression": {
            "$ref": "#/components/schemas/GroupFilterExpressionDto"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ValueDto"
              }
            }
          }
        }
      },
      "DeprecatedRefillingSettingsDto": {
        "required": ["backStorageZone", "locationId", "salesFloorZone", "storeZoneId"],
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "storeZoneId": {
            "type": "integer",
            "format": "int64"
          },
          "backStorageZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "salesFloorZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "offsiteStorageZone": {
            "$ref": "#/components/schemas/RefillingZoneSettings"
          },
          "stockTargetSource": {
            "$ref": "#/components/schemas/StockTargetSourceSettings"
          },
          "productTaskAttributes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShownProductTaskAttribute"
            }
          }
        }
      },
      "LocationIdDto": {
        "required": ["id", "locationType"],
        "type": "object",
        "properties": {
          "locationType": {
            "$ref": "#/components/schemas/LocationType"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductAttributesValuesDto": {
        "required": ["values"],
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueWithTypeDto"
            }
          }
        }
      },
      "ProductRequirementsCountDto": {
        "required": ["completed", "outstanding"],
        "type": "object",
        "properties": {
          "outstanding": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "completed": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "AttributesValuesDto": {
        "required": ["valuesForAttributes"],
        "type": "object",
        "properties": {
          "valuesForAttributes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ValueWithTypeDto"
              }
            }
          }
        }
      },
      "DeprecatedHandheldAppSettingsDto": {
        "required": ["assetThingTypeId", "enabledFeatures", "itemCheckerSettings", "itemFinderSettings", "stockCountSettings"],
        "type": "object",
        "properties": {
          "assetThingTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "enabledFeatures": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["StockCount", "ItemsChecker", "ItemFinder", "GeigerCounter", "Refilling", "Logistics", "Alarms"]
            }
          },
          "stockCountSettings": {
            "$ref": "#/components/schemas/StockCountSetting"
          },
          "itemFinderSettings": {
            "$ref": "#/components/schemas/DeprecatedItemFinderSettingsDto"
          },
          "itemCheckerSettings": {
            "$ref": "#/components/schemas/ItemCheckerSettings"
          }
        }
      },
      "DeprecatedItemFinderSettingsDto": {
        "required": ["attributesToSearchBy", "listSettings"],
        "type": "object",
        "properties": {
          "attributesToSearchBy": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "listSettings": {
            "$ref": "#/components/schemas/ItemFinderResultListSettings"
          }
        }
      },
      "ItemQuantityDto": {
        "required": ["expectedQuantity", "id", "registeredQuantity", "unitType"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "expectedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "registeredQuantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ReportBillOfMaterialDto": {
        "required": ["items"],
        "type": "object",
        "properties": {
          "items": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemQuantityDto"
            }
          }
        }
      },
      "ReportShipmentUnitDto": {
        "required": ["billOfMaterial", "createdAt", "destinationReferenceId", "id", "registeredAt", "sourceReferenceId", "unitState", "unitType"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "sourceReferenceId": {
            "type": "string"
          },
          "destinationReferenceId": {
            "type": "string"
          },
          "unitState": {
            "type": "string",
            "enum": ["IN_TRANSIT", "ALLOCATED", "PROCESSED", "PROCESSED_NOT_CONFIRMED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "registeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "billOfMaterial": {
            "$ref": "#/components/schemas/ReportBillOfMaterialDto"
          }
        }
      },
      "ReportShipmentUnitReferenceDto": {
        "required": ["createdAt", "destinationReferenceId", "id", "registeredAt", "sourceReferenceId", "totalExpectedQuantity", "totalRegisteredQuantity", "unitState", "unitType"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "unitType": {
            "type": "string",
            "enum": ["SSCC", "HU", "EAN", "EPC"]
          },
          "sourceReferenceId": {
            "type": "string"
          },
          "destinationReferenceId": {
            "type": "string"
          },
          "unitState": {
            "type": "string",
            "enum": ["IN_TRANSIT", "ALLOCATED", "PROCESSED", "PROCESSED_NOT_CONFIRMED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "registeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "totalExpectedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "totalRegisteredQuantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LogisticProcessHandleDto": {
        "required": ["businessStep", "destinationReference", "id", "sourceReference", "state"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "businessStep": {
            "type": "string",
            "enum": ["RECEIVING", "SHIPPING"]
          },
          "sourceReference": {
            "type": "string"
          },
          "destinationReference": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": ["ACTIVE", "PENDING_VALIDATION", "VALIDATING", "VALIDATION_COMPLETED", "SUBMITTED", "CANCELLED", "CLOSED"]
          }
        }
      },
      "LocationGroupIdentifierDto": {
        "required": ["attributeWithValue"],
        "type": "object",
        "properties": {
          "parentLocationId": {
            "type": "integer",
            "format": "int64"
          },
          "attributeWithValue": {
            "$ref": "#/components/schemas/AttributeWithValueDto"
          }
        }
      },
      "LocationIdentifierDto": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LocationNodeIdentifierDto": {
        "type": "object",
        "discriminator": {
          "propertyName": "nodeType",
          "mapping": {
            "LOCATION": "#/components/schemas/LocationIdentifierDto",
            "ZONE": "#/components/schemas/ZoneIdentifierDto",
            "GROUP": "#/components/schemas/LocationGroupIdentifierDto"
          }
        },
        "oneOf": [{
          "$ref": "#/components/schemas/LocationIdentifierDto"
        }, {
          "$ref": "#/components/schemas/ZoneIdentifierDto"
        }, {
          "$ref": "#/components/schemas/LocationGroupIdentifierDto"
        }]
      },
      "NavigationPathDto": {
        "required": ["nodeIds"],
        "type": "object",
        "properties": {
          "nodeIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationNodeIdentifierDto"
            }
          }
        }
      },
      "NavigationPathsDto": {
        "required": ["paths"],
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NavigationPathDto"
            }
          }
        }
      },
      "ZoneIdentifierDto": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NavigationContext": {
        "required": ["contextName"],
        "type": "object",
        "properties": {
          "contextName": {
            "type": "string"
          }
        }
      },
      "NamedLocationNavigationNodeDto": {
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LocationNodeIdentifierDto"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "NamedNavigationPathDto": {
        "required": ["nodes"],
        "type": "object",
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NamedLocationNavigationNodeDto"
            }
          }
        }
      },
      "HighlightDto": {
        "required": ["fieldPath"],
        "type": "object",
        "properties": {
          "fieldPath": {
            "type": "string"
          }
        }
      },
      "LocationNodeSearchResultDto": {
        "required": ["highlight", "locationNode", "path"],
        "type": "object",
        "properties": {
          "locationNode": {
            "$ref": "#/components/schemas/SimpleLocationNodeDto"
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NamedLocationNavigationNodeDto"
            }
          },
          "highlight": {
            "$ref": "#/components/schemas/HighlightDto"
          }
        }
      },
      "SimpleLocationNodeDto": {
        "required": ["additionalAttributes", "id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LocationNodeIdentifierDto"
          },
          "name": {
            "type": "string"
          },
          "additionalInfo": {
            "$ref": "#/components/schemas/ValueDto"
          },
          "additionalAttributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ValueDto"
            }
          }
        }
      },
      "ChildNodesDto": {
        "required": ["childName", "nodes"],
        "type": "object",
        "properties": {
          "childName": {
            "type": "string"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleLocationNodeDto"
            }
          }
        }
      },
      "UserInfoDto": {
        "required": ["email", "userId", "username"],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "AuthResult": {
        "required": ["accessToken", "idToken", "refreshToken"],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "idToken": {
            "type": "string"
          }
        }
      },
      "InstancePermissionsDto": {
        "required": ["instanceId", "permissions"],
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FeatureAccessibilityDto": {
        "required": ["adminPanelFields", "analyticsPermissions", "locationsPermissions", "mobileSettingsPermissions", "refillingDashboard", "reportPermissions", "scopesPermissions", "stockCountPermissions", "thingTypesPermissions"],
        "type": "object",
        "properties": {
          "thingTypesPermissions": {
            "type": "boolean"
          },
          "locationsPermissions": {
            "type": "boolean"
          },
          "scopesPermissions": {
            "type": "boolean"
          },
          "stockCountPermissions": {
            "type": "boolean"
          },
          "analyticsPermissions": {
            "type": "boolean"
          },
          "refillingDashboard": {
            "type": "boolean"
          },
          "reportPermissions": {
            "type": "boolean"
          },
          "adminPanelFields": {
            "type": "boolean"
          },
          "mobileSettingsPermissions": {
            "type": "boolean"
          }
        }
      },
      "QuickSightDashboard": {
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Unit": {
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}