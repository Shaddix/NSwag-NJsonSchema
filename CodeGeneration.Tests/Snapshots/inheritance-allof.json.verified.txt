//----------------------
// <auto-generated>
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export class AppointmentEventDto implements IAppointmentEventDto {
    id!: number;
    isDeleted!: boolean;
    title!: string;

    protected _discriminator: string;

    constructor(data?: IAppointmentEventDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
        this._discriminator = "AppointmentEventDto";
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.isDeleted = _data["isDeleted"];
            this.title = _data["title"];
        }
    }

    static fromJS(data: any): AppointmentEventDto {
        data = typeof data === 'object' ? data : {};
        if (data["discriminator"] === "VisitListDto") {
            let result = new VisitListDto();
            result.init(data);
            return result;
        }
        if (data["discriminator"] === "MeetingListDto") {
            let result = new MeetingListDto();
            result.init(data);
            return result;
        }
        if (data["discriminator"] === "AbsenceListDto") {
            let result = new AbsenceListDto();
            result.init(data);
            return result;
        }
        let result = new AppointmentEventDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["discriminator"] = this._discriminator;
        data["id"] = this.id;
        data["isDeleted"] = this.isDeleted;
        data["title"] = this.title;
        return data;
    }
}

export interface IAppointmentEventDto {
    id: number;
    isDeleted: boolean;
    title: string;
}

export class VisitListDto extends AppointmentEventDto implements IVisitListDto {
    lastPatientNotificationDateTime!: Date | undefined;

    constructor(data?: IVisitListDto) {
        super(data);
        this._discriminator = "VisitListDto";
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.lastPatientNotificationDateTime = _data["lastPatientNotificationDateTime"] ? new Date(_data["lastPatientNotificationDateTime"].toString()) : <any>undefined;
        }
    }

    static override fromJS(data: any): VisitListDto {
        data = typeof data === 'object' ? data : {};
        let result = new VisitListDto();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["lastPatientNotificationDateTime"] = this.lastPatientNotificationDateTime ? this.lastPatientNotificationDateTime.toISOString() : <any>undefined;
        super.toJSON(data);
        return data;
    }
}

export interface IVisitListDto extends IAppointmentEventDto {
    lastPatientNotificationDateTime: Date | undefined;
}

export class MeetingListDto extends AppointmentEventDto implements IMeetingListDto {

    constructor(data?: IMeetingListDto) {
        super(data);
        this._discriminator = "MeetingListDto";
    }

    override init(_data?: any) {
        super.init(_data);
    }

    static override fromJS(data: any): MeetingListDto {
        data = typeof data === 'object' ? data : {};
        let result = new MeetingListDto();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data;
    }
}

export interface IMeetingListDto extends IAppointmentEventDto {
}

export class AbsenceListDto extends AppointmentEventDto implements IAbsenceListDto {
    absenceReasonId!: number | undefined;

    constructor(data?: IAbsenceListDto) {
        super(data);
        this._discriminator = "AbsenceListDto";
    }

    override init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.absenceReasonId = _data["absenceReasonId"];
        }
    }

    static override fromJS(data: any): AbsenceListDto {
        data = typeof data === 'object' ? data : {};
        let result = new AbsenceListDto();
        result.init(data);
        return result;
    }

    override toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["absenceReasonId"] = this.absenceReasonId;
        super.toJSON(data);
        return data;
    }
}

export interface IAbsenceListDto extends IAppointmentEventDto {
    absenceReasonId: number | undefined;
}

